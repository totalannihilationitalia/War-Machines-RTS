#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, canon1, canon2, canon3, canon4, flare1, flare2, flare3,
       flare4, box1, box2, body, chassis;

static-var  gun_1, restore_delay;

// Signal definitions
#define SIG_AIM				2


Create()
{
	hide flare1;
	hide flare2;
	hide flare3;
	hide flare4;
	move canon1 to z-axis [1.000000] now;
	move canon2 to z-axis [1.000000] now;
	move canon3 to z-axis [1.000000] now;
	move canon4 to z-axis [1.000000] now;
	gun_1 = canon1;
	restore_delay = 3000;
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn body to y-axis <0.000000> speed <50.000000>;
	turn box1 to x-axis <0.000000> speed <25.000000>;
	turn box2 to x-axis <0.000000> speed <25.000000>;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn body to y-axis heading speed <50.000000>;
	turn box1 to x-axis <0.000000> - pitch speed <25.000000>;
	turn box2 to x-axis <0.000000> - pitch speed <25.000000>;
	wait-for-turn body around y-axis;
	wait-for-turn box1 around x-axis;
	wait-for-turn box2 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( gun_1 == 1 )
	{
		show flare1;
		move canon1 to z-axis [0.350000] speed [500.000000];
		sleep 150;
		hide flare1;
		wait-for-move canon1 along z-axis;
		move canon1 to z-axis [1.000000] speed [3.000000];
		gun_1 = canon2;
		return (0);
	}
	if( gun_1 == 2 )
	{
		show flare3;
		move canon3 to z-axis [0.350000] speed [500.000000];
		sleep 150;
		hide flare3;
		wait-for-move canon3 along z-axis;
		move canon3 to z-axis [1.000000] speed [3.000000];
		gun_1 = canon3;
		return (0);
	}
	if( gun_1 == 3 )
	{
		show flare2;
		move canon2 to z-axis [0.350000] speed [500.000000];
		sleep 150;
		hide flare2;
		wait-for-move canon2 along z-axis;
		move canon2 to z-axis [1.000000] speed [3.000000];
		gun_1 = canon4;
		return (0);
	}
	if( gun_1 == 4 )
	{
		show flare4;
		move canon4 to z-axis [0.350000] speed [500.000000];
		sleep 150;
		hide flare4;
		wait-for-move canon4 along z-axis;
		move canon4 to z-axis [1.000000] speed [3.000000];
		gun_1 = canon1;
		return (0);
	}
}

AimFromPrimary(piecenum)
{
	piecenum = body;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 1 )
	{
		piecenum = flare1;
	}
	if( gun_1 == 2 )
	{
		piecenum = flare3;
	}
	if( gun_1 == 3 )
	{
		piecenum = flare2;
	}
	if( gun_1 == 4 )
	{
		piecenum = flare4;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	hide flare1;
	hide flare2;
	hide flare3;
	hide flare4;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode canon1 type 288;
		explode canon2 type 1056;
		explode canon3 type 2080;
		explode canon4 type 2080;
		explode box1 type 288;
		explode box2 type 1056;
		explode body type 544;
		explode chassis type 2080;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode canon1 type 260;
		explode canon2 type 257;
		explode canon3 type 2080;
		explode canon4 type 2080;
		explode box1 type 257;
		explode box2 type 30;
		explode body type 544;
		explode chassis type 2080;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode canon1 type 30;
		explode canon2 type 257;
		explode canon3 type 2080;
		explode canon4 type 14;
		explode box1 type 257;
		explode box2 type 30;
		explode body type 30;
		explode chassis type 30;
		return (0);
	}
	corpsetype = 3;
	explode canon1 type 30;
	explode canon2 type 257;
	explode canon3 type 2080;
	explode canon4 type 14;
	explode box1 type 257;
	explode box2 type 30;
	explode body type 30;
	explode chassis type 30;
	return (0);
}
