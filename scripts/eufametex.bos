#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, trivella1, portatrivell1, braccio1, trivella2, portatrivell2, braccio2;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, statechg_DesiredState, statechg_StateChanging,
            Static_Var_6;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

lavora1()
{
	if( Static_Var_6 == 1 )
	{
		spin trivella1 around y-axis speed Static_Var_1 accelerate Static_Var_2;
		sleep 10000;
		stop-spin trivella1 around y-axis decelerate Static_Var_3;
		move trivella1 to y-axis [2.500000] speed [5.000000];
		turn portatrivell2 to z-axis <-80.000000> speed <50.000000>;
		wait-for-move trivella1 along y-axis;

			wait-for-turn portatrivell2 around z-axis;
		turn portatrivell1 to z-axis <60.000000> speed <50.000000>;
		turn braccio1 to y-axis <-80.000000> speed <50.000000>;
		turn braccio2 to y-axis <0.000000> speed <50.000000>;
		wait-for-turn braccio2 around y-axis;
		wait-for-turn braccio1 around y-axis;
		turn portatrivell2 to z-axis <0.000000> speed <50.000000>;
		wait-for-turn portatrivell2 around z-axis;
		move trivella2 to y-axis [0.000000] speed [5.000000];
		spin trivella2 around y-axis speed Static_Var_1 accelerate Static_Var_2;
		turn portatrivell1 to z-axis <120.000000> speed <50.000000>;
		sleep 10000;
		stop-spin trivella2 around y-axis decelerate Static_Var_3;
		move trivella2 to y-axis [2.500000] speed [5.000000];
		turn portatrivell1 to z-axis <60.000000> speed <50.000000>;
		wait-for-turn portatrivell1 around z-axis;
		turn portatrivell2 to z-axis <-60.000000> speed <50.000000>;
		turn braccio2 to y-axis <-80.000000> speed <50.000000>;
		turn braccio1 to y-axis <0.000000> speed <50.000000>;
		wait-for-turn braccio1 around y-axis;
		wait-for-turn braccio2 around y-axis;
		turn portatrivell2 to z-axis <-120.000000> speed <50.000000>;
		turn portatrivell1 to z-axis <0.000000> speed <50.000000>;
		wait-for-turn portatrivell1 around z-axis;
		move trivella1 to y-axis [0.000000] speed [5.000000];
	}
	if( Static_Var_6 == 1 )
	{
		start-script lavora1();
	}
}

Go()
{
	Static_Var_6 = 1;
	start-script lavora1();
}

Stop()
{
	Static_Var_6 = 0;
	stop-spin trivella1 around y-axis decelerate Static_Var_3;
	wait-for-turn trivella1 around y-axis;
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	turn portatrivell2 to z-axis <-60.000000> now;
	turn braccio2 to y-axis <-80> now;
	move trivella2 to y-axis [2.500000] now;
	Static_Var_1 = 0;
	Static_Var_2 = 160;
	Static_Var_3 = 160;
	dont-shade trivella1;
	dont-cache trivella1;
	call-script InitState();
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

SweetSpot(piecenum)
{
	piecenum = base;
}

SetSpeed(Func_Var_1)
{
	Static_Var_1 = Func_Var_1 * 20;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode trivella1 type BITMAPONLY | BITMAP1;
		explode base type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode trivella1 type SHATTER | BITMAP1;
		explode base type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode trivella1 type FALL | BITMAP1;
		explode trivella1 type SHATTER | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode trivella1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode base type SHATTER | EXPLODE_ON_HIT | BITMAP2;
}
