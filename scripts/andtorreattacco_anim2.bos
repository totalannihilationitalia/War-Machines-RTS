#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, barra, ruota_porta1, ruota_porta2, ruota_porta3, porta1, porta2, porta3,
       smoke, nano;

static-var  Static_Var_1, unitviewer, Static_Var_3, Static_Var_4, statechg_DesiredState,
            statechg_StateChanging;

// Signal definitions
#define SIG_ACTIVATE			4


activatescr()
{
	if( TRUE )
	{
		sleep 398;
	}
	if( TRUE )
	{
		sleep 398;
	}
	sleep 48;
}

deactivatescr()
{
	if( TRUE )
	{
		sleep 998;
	}
	if( TRUE )
	{
		sleep 998;
	}
	sleep 48;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from smoke;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

OpenYard()
{
	set YARD_OPEN to 1;
	while( !get YARD_OPEN )
	{
		set BUGGER_OFF to 1;
		sleep 1500;
		set YARD_OPEN to 1;
	}
	set BUGGER_OFF to 0;
}

CloseYard()
{
	set YARD_OPEN to 0;
	while( get YARD_OPEN )
	{
		set BUGGER_OFF to 1;
		sleep 1500;
		set YARD_OPEN to 0;
	}
	set BUGGER_OFF to 0;
}

Go()
{
	Static_Var_4 = 0;
	call-script activatescr();
	call-script OpenYard();
	set INBUILDSTANCE to 1;
}

Stop()
{
	set INBUILDSTANCE to 0;
	call-script CloseYard();
	call-script deactivatescr();
	Static_Var_4 = 1;
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	turn ruota_porta2 to y-axis <120.000000> now;
	turn ruota_porta3 to y-axis <240.000000> now;
/*	move base to y-axis [1000.000000] now;
	move base to y-axis [0.000000] speed [600.000000];
*/	wait-for-move base along y-axis;
	sleep 5000;
	move barra to y-axis [10.000000] speed [5.000000];
	wait-for-move barra along y-axis;
	sleep 2000;
	spin barra around y-axis speed <45.010989>;
	sleep 5000;
	turn porta1 to z-axis <85.000000> speed <20.000000>;
	turn porta2 to z-axis <85.000000> speed <20.000000>;
	turn porta3 to z-axis <85.000000> speed <20.000000>;
	sleep 500;
	unitviewer = FALSE;
	Static_Var_3 = 0;
	Static_Var_1 = 0;
	Static_Var_4 = 1;
	call-script InitState();
	start-script SmokeUnit();
}

QueryNanoPiece(piecenum)
{
	if( Static_Var_1 == 0 )
	{
		piecenum = nano;
	}
	if( Static_Var_1 == 1 )
	{
		piecenum = nano;
	}
	++Static_Var_1;
	if( Static_Var_1 >= 2 )
	{
		Static_Var_1 = 0;
	}
}

Demo()
{
	unitviewer = TRUE;
}

Activate()
{
	signal SIG_ACTIVATE;
	start-script RequestState(0);
}

Deactivate()
{
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	if( !unitviewer )
	{
		sleep 5000;
	}
	set-signal-mask 0;
	start-script RequestState(1);
}

StartBuilding()
{
	sleep 200;
}

StopBuilding()
{
	sleep 200;
}

QueryBuildInfo(piecenum)
{
	piecenum = base;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		return (0);
	}
	corpsetype = 3;
}
