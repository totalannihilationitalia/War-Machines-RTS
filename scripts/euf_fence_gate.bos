#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  barriera, barriera_mobile, off, on, laser, gen_laser, Blink1, Blink2;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7, Static_Var_8, statechg_DesiredState, statechg_StateChanging;


ShowDamage(Func_Var_1, Func_Var_2)
{
	while( TRUE )
	{
		sleep 250;
		Func_Var_1 = get HEALTH;
		Func_Var_2 = Rand( 1, 4 );
		if( Func_Var_1 <= 75 )
		{
			if( Static_Var_1 == 0 )
			{
				Static_Var_1 = 1;
				Static_Var_2 = Func_Var_2;
				if( Func_Var_2 == 1 )
				{
					Static_Var_5 = 0;
					hide laser;
					hide on;
					show off;
				}
			}
		}
		if( Func_Var_1 <= 50 )
		{
			if( Static_Var_1 == 1 )
			{
				Static_Var_1 = 2;
				Static_Var_3 = Func_Var_2;
				if( Func_Var_2 == 1 )
				{
					Static_Var_5 = 0;
					hide laser;
					hide on;
					show off;
				}
			}
		}
		if( Func_Var_1 <= 25 )
		{
			if( Static_Var_1 == 2 )
			{
				Static_Var_1 = 3;
				Static_Var_4 = Func_Var_2;
				if( Func_Var_2 == 1 )
				{
					Static_Var_5 = 0;
					hide laser;
					hide on;
					show off;
				}
			}
		}
		if( Func_Var_1 >= 27 )
		{
			if( Static_Var_1 == 3 )
			{
				if( Static_Var_4 == 1 )
				{
					Static_Var_5 = 1;
					if( get ACTIVATION )
					{
						show laser;
						show on;
						hide off;
					}
				}
				Static_Var_1 = 2;
				Static_Var_4 = 0;
			}
		}
		if( Func_Var_1 >= 52 )
		{
			if( Static_Var_1 == 2 )
			{
				if( Static_Var_3 == 1 )
				{
					Static_Var_5 = 1;
					if( get ACTIVATION )
					{
						show laser;
						show on;
						hide off;
					}
				}
				Static_Var_1 = 1;
				Static_Var_3 = 0;
			}
		}
		if( Func_Var_1 >= 77 )
		{
			if( Static_Var_1 == 1 )
			{
				if( Static_Var_2 == 1 )
				{
					Static_Var_5 = 1;
					if( get ACTIVATION )
					{
						show laser;
						show on;
						hide off;
					}
				}
				Static_Var_1 = 0;
				Static_Var_2 = 0;
			}
		}
	}
}

Flicker(Func_Var_1, Func_Var_2)
{
	while( TRUE )
	{
		sleep 500;
		if( get ACTIVATION )
		{
			if( !get YARD_OPEN )
			{
				Func_Var_1 = Rand( 1, 5 );
				Func_Var_2 = Rand( 1, 4 );
				if( Func_Var_1 == 1 )
				{
					if( Func_Var_2 == 1 )
					{
						if( Static_Var_5 == 1 )
						{
							hide laser;
							hide on;
							show off;
							sleep 100;
							show laser;
							show on;
							hide off;
						}
					}
				}
			}
		}
	}
}

activatescr()
{
	//set YARD_OPEN to 1;
	dont-cache Blink1;
	dont-cache Blink2;
	show laser;
	hide off;
	show on;
	move barriera_mobile to y-axis [0.000000] speed [5.000000];
	start-script Flicker();
}

deactivatescr()
{
	hide laser;
	hide on;
	show off;
	move barriera_mobile to y-axis [-11.000000] speed [5.000000];
	cache laser;
}

OpenYard()
{
	set YARD_OPEN to 1;
}

CloseYard()
{
	set YARD_OPEN to 0;
}

Go()
{
	call-script activatescr();
	call-script OpenYard();
	set ACTIVATION to 10000;
}

Stop()
{
	set ACTIVATION to 0;
	call-script deactivatescr();
	call-script CloseYard();
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			Func_Var_4 = Rand( 1, 2 );
			if( Func_Var_4 == 1 )
			{
				emit-sfx smoketype from Blink1;
			}
			if( Func_Var_4 == 2 )
			{
				emit-sfx smoketype from Blink2;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	Static_Var_1 = 0;
	Static_Var_2 = 0;
	Static_Var_3 = 0;
	Static_Var_4 = 0;
	Static_Var_5 = 1;
	Static_Var_6 = 1;
	Static_Var_7 = 1;
	Static_Var_8 = 1;
	dont-shade Blink1;
	dont-shade Blink2;
	call-script InitState();
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script SmokeUnit();
	start-script ShowDamage();
	set ARMORED to 1;
}

Activate()
{
	set YARD_OPEN to 0;
	start-script RequestState(0);
}

Deactivate()
{
	set YARD_OPEN to 1;
	start-script RequestState(1);
}

SweetSpot(piecenum)
{
	piecenum = barriera;
}

Killed(severity, corpsetype)
{
	hide Blink1;
	hide Blink2;
	hide laser;
	hide off;
	hide on;
	corpsetype = 1;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barriera type BITMAPONLY | BITMAP1;
		explode barriera_mobile type BITMAPONLY | BITMAP1;
		explode Blink1 type BITMAPONLY | BITMAP3;
		explode Blink2 type BITMAPONLY | BITMAP4;
		explode gen_laser type BITMAPONLY | BITMAP4;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode barriera type BITMAPONLY | BITMAP1;
		explode barriera_mobile type BITMAPONLY | BITMAP1;
		explode Blink1 type BITMAPONLY | BITMAP1;
		explode Blink2 type BITMAPONLY | BITMAP1;
		explode gen_laser type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode barriera type BITMAPONLY | BITMAP1;
		explode barriera_mobile type BITMAPONLY | BITMAP1;
		explode Blink1 type BITMAPONLY | BITMAP1;
		explode Blink2 type BITMAPONLY | BITMAP1;
		explode gen_laser type BITMAPONLY | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode barriera type BITMAPONLY | BITMAP1;
	explode barriera_mobile type BITMAPONLY | BITMAP1;
	explode Blink1 type BITMAPONLY | BITMAP1;
	explode Blink2 type BITMAPONLY | BITMAP1;
	explode gen_laser type BITMAPONLY | BITMAP1;
}
