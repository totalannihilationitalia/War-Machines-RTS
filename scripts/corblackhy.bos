#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, barrel1a, barrel1b, barrel1c, barrel1d, radar, wake1,
       wake2, wake3, wake4, wake5, wake6, tur1, tur2, tur3,
       tur4, tur5, tur6, sleeves1, gun2, sleeves3, sleeves4, gun5,
       gun6, flare1a, flare1c, flare1b, flare1d, flare2, flare3b, flare4a,
       flare3a, flare4b, flare5, flare6;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, restore_delay;

// Signal definitions
#define SIG_MOVE			128


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			Func_Var_4 = Rand( 1, 3 );
			if( Func_Var_4 == 1 )
			{
				emit-sfx smoketype from body;
			}
			if( Func_Var_4 == 2 )
			{
				emit-sfx smoketype from tur1;
			}
			if( Func_Var_4 == 3 )
			{
				emit-sfx smoketype from tur2;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	set ARMORED to 1;
	hide flare1a;
	hide flare1b;
	hide flare1c;
	hide flare1d;
	hide flare3a;
	hide flare3b;
	hide flare4a;
	hide flare4b;
	hide flare2;
	hide flare5;
	hide flare6;
	Static_Var_1 = 0;
	Static_Var_3 = 0;
	Static_Var_2 = 0;
	restore_delay = 3000;
	start-script SmokeUnit();
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 1000;
	}
	spin radar around y-axis speed <60.000000>;
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn tur1 to y-axis <0.000000> speed <20.000000>;
	turn sleeves1 to x-axis <0.000000> speed <20.000000>;
}

RestoreAfterDelay2()
{
	sleep restore_delay;
	turn tur2 to y-axis <0.000000> speed <100.000000>;
	turn tur5 to y-axis <0.000000> speed <100.000000>;
	turn tur6 to y-axis <0.000000> speed <100.000000>;
}

RestoreAfterDelay3()
{
	sleep restore_delay;
	turn tur3 to y-axis <0.000000> speed <125.000000>;
	turn sleeves3 to x-axis <0.000000> speed <125.000000>;
	turn tur4 to y-axis <0.000000> speed <125.000000>;
	turn sleeves4 to x-axis <0.000000> speed <125.000000>;
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		emit-sfx 2 from wake3;
		emit-sfx 2 from wake4;
		emit-sfx 2 from wake5;
		emit-sfx 2 from wake6;
		sleep 300;
	}
}

StopMoving()
{
	signal SIG_MOVE;
}

SweetSpot(piecenum)
{
	piecenum = body;
}

AimFromWeapon1(Func_Var_1)
{
	Func_Var_1 = 13;
}

QueryWeapon1(Func_Var_1)
{
	if( Static_Var_1 == 0 )
	{
		Func_Var_1 = 25;
	}
	if( Static_Var_1 == 1 )
	{
		Func_Var_1 = 27;
	}
	if( Static_Var_1 == 2 )
	{
		Func_Var_1 = 26;
	}
	if( Static_Var_1 == 3 )
	{
		Func_Var_1 = 28;
	}
}

AimWeapon1(Func_Var_1, Func_Var_2)
{
	signal 2;
	set-signal-mask 2;
	turn tur1 to y-axis Func_Var_1 speed <45.000000>;
	turn sleeves1 to x-axis <0.000000> - Func_Var_2 speed <20.000000>;
	wait-for-turn tur1 around y-axis;
	wait-for-turn sleeves1 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon1()
{
	if( Static_Var_1 == 0 )
	{
		move barrel1a to z-axis [-2.000000] speed [500.000000];
					emit-sfx 1024 + 0 from flare1a;
	//	show flare1a;
		sleep 150;
		move barrel1a to z-axis [0.000000] speed [3.000000];
	//	hide flare1a;
	}
	if( Static_Var_1 == 1 )
	{
		move barrel1b to z-axis [-2.000000] speed [500.000000];
	//	show flare1b;
		emit-sfx 1024 + 0 from flare1b;
		sleep 150;
		move barrel1b to z-axis [0.000000] speed [3.000000];
	//	hide flare1b;
	}
	if( Static_Var_1 == 2 )
	{
		move barrel1c to z-axis [-2.000000] speed [500.000000];
	//	show flare1c;
		emit-sfx 1024 + 0 from flare1c;
		sleep 150;
		move barrel1c to z-axis [0.000000] speed [3.000000];
	//	hide flare1c;
	}
	if( Static_Var_1 == 3 )
	{
		move barrel1d to z-axis [-2.000000] speed [500.000000];
	//	show flare1d;
		emit-sfx 1024 + 0 from flare1d;
		sleep 150;
		move barrel1d to z-axis [0.000000] speed [3.000000];
	//	hide flare1d;
	}
	++Static_Var_1;
	if( Static_Var_1 >= 4 )
	{
		Static_Var_1 = 0;
	}
}

AimFromWeapon2(Func_Var_1)
{
	Func_Var_1 = 14;
}

QueryWeapon2(Func_Var_1)
{
	Func_Var_1 = 29;
}

AimWeapon2(Func_Var_1, Func_Var_2)
{
	signal 4;
	set-signal-mask 4;
	if( Func_Var_1 < -29491 OR Func_Var_1 > 29491 OR Func_Var_1 > -3277 AND Func_Var_1 < 3277 )
	{
		return (0);
	}
	turn tur2 to y-axis Func_Var_1 speed <150.000000>;
	wait-for-turn tur2 around y-axis;
	start-script RestoreAfterDelay2();
	return (1);
}

FireWeapon2()
{
	show flare2;
	sleep 150;
	turn gun2 to z-axis <120.000000> speed <400.000000>;
	hide flare2;
	wait-for-turn gun2 around z-axis;
	turn gun2 to z-axis <0.000000> now;
}

AimFromWeapon3(Func_Var_1)
{
	Func_Var_1 = 15;
}

QueryWeapon3(Func_Var_1)
{
	if( Static_Var_2 == 0 )
	{
		Func_Var_1 = 32;
	}
	if( Static_Var_2 == 1 )
	{
		Func_Var_1 = 30;
	}
}

AimWeapon3(Func_Var_1, Func_Var_2)
{
	signal 8;
	set-signal-mask 8;
	turn tur3 to y-axis Func_Var_1 speed <200.000000>;
	turn sleeves3 to x-axis <0.000000> - Func_Var_2 speed <150.000000>;
	wait-for-turn tur3 around y-axis;
	wait-for-turn sleeves3 around x-axis;
	start-script RestoreAfterDelay3();
	return (1);
}

FireWeapon3()
{
	Static_Var_2 = !Static_Var_2;
}

AimFromWeapon4(Func_Var_1)
{
	Func_Var_1 = 17;
}

QueryWeapon4(Func_Var_1)
{
	Func_Var_1 = 34;
}

AimWeapon4(Func_Var_1, Func_Var_2)
{
	signal 16;
	set-signal-mask 16;
	if( Func_Var_1 < -29491 OR Func_Var_1 > 29491 )
	{
		return (0);
	}
	turn tur5 to y-axis Func_Var_1 speed <150.000000>;
	wait-for-turn tur5 around y-axis;
	start-script RestoreAfterDelay2();
	return (1);
}

FireWeapon4()
{
	show flare5;
	sleep 150;
	turn gun5 to z-axis <120.000000> speed <400.000000>;
	hide flare5;
	wait-for-turn gun5 around z-axis;
	turn gun5 to z-axis <0.000000> now;
}

AimFromWeapon5(Func_Var_1)
{
	Func_Var_1 = 18;
}

QueryWeapon5(Func_Var_1)
{
	Func_Var_1 = 35;
}

AimWeapon5(Func_Var_1, Func_Var_2)
{
	signal 32;
	set-signal-mask 32;
	if( Func_Var_1 < -29491 OR Func_Var_1 > 29491 OR Func_Var_1 > -3277 AND Func_Var_1 < 3277 )
	{
		return (0);
	}
	turn tur6 to y-axis Func_Var_1 speed <150.000000>;
	wait-for-turn tur6 around y-axis;
	start-script RestoreAfterDelay2();
	return (1);
}

FireWeapon5()
{
	show flare6;
	sleep 150;
	turn gun6 to z-axis <120.000000> speed <400.000000>;
	hide flare6;
	wait-for-turn gun6 around z-axis;
	turn gun6 to z-axis <0.000000> now;
}

AimFromWeapon6(Func_Var_1)
{
	Func_Var_1 = 16;
}

QueryWeapon6(Func_Var_1)
{
	if( Static_Var_3 == 0 )
	{
		Func_Var_1 = 31;
	}
	if( Static_Var_3 == 1 )
	{
		Func_Var_1 = 33;
	}
}

AimWeapon6(Func_Var_1, Func_Var_2)
{
	signal 64;
	set-signal-mask 64;
	turn tur4 to y-axis Func_Var_1 speed <200.000000>;
	turn sleeves4 to x-axis <0.000000> - Func_Var_2 speed <150.000000>;
	wait-for-turn tur4 around y-axis;
	wait-for-turn sleeves4 around x-axis;
	start-script RestoreAfterDelay3();
	return (1);
}

FireWeapon6()
{
	Static_Var_3 = !Static_Var_3;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barrel1a type BITMAPONLY | BITMAP1;
		explode barrel1b type BITMAPONLY | BITMAP2;
		explode barrel1d type BITMAPONLY | BITMAP3;
		explode tur5 type BITMAPONLY | BITMAP4;
		explode tur3 type BITMAPONLY | BITMAP5;
		explode tur1 type BITMAPONLY | BITMAP3;
		explode tur2 type BITMAPONLY | BITMAP4;
		explode tur4 type BITMAPONLY | BITMAP5;
		explode body type BITMAPONLY | BITMAP1;
		explode tur6 type BITMAPONLY | BITMAP4;
		explode wake1 type BITMAPONLY | BITMAP1;
		explode wake2 type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode barrel1a type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode barrel1b type FALL | EXPLODE_ON_HIT | BITMAP2;
		explode barrel1d type FALL | EXPLODE_ON_HIT | BITMAP4;
		explode barrel1c type FALL | EXPLODE_ON_HIT | BITMAP5;
		explode tur5 type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode tur6 type FALL | EXPLODE_ON_HIT | BITMAP2;
		explode gun6 type FALL | EXPLODE_ON_HIT | BITMAP3;
		explode tur3 type FALL | EXPLODE_ON_HIT | BITMAP4;
		explode tur4 type FALL | EXPLODE_ON_HIT | BITMAP5;
		explode body type BITMAPONLY | BITMAP1;
		explode gun5 type SHATTER | BITMAP5;
		explode wake1 type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode wake2 type FALL | EXPLODE_ON_HIT | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode barrel1a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode barrel1b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode barrel1c type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode barrel1d type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode gun5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode gun6 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode tur3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode tur4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode body type BITMAPONLY | BITMAP1;
		explode tur2 type SHATTER | EXPLODE_ON_HIT | BITMAP5;
		explode wake1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode wake2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode barrel1a type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode barrel1c type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode barrel1b type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode barrel1d type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode gun5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode gun6 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode tur4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode body type BITMAPONLY | BITMAP1;
	explode tur1 type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	explode wake1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode wake2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
}
