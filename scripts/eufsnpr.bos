#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, gun, barrel, flare;

// Signal definitions
#define SIG_AIM				2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from gun;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide flare;
	dont-cache flare;
	dont-cache gun;
	dont-cache barrel;
	dont-shade gun;
	dont-shade barrel;
	start-script SmokeUnit();
}

SweetSpot(piecenum)
{
	piecenum = body;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

AimFromPrimary(piecenum)
{
	piecenum = gun;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn gun to y-axis heading speed <300.000000>;
	turn gun to x-axis <0.000000> - pitch speed <150.000000>;
	wait-for-turn gun around y-axis;
	return (1);
}

FirePrimary()
{
	move barrel to z-axis [-3.000000] now;
	//show flare;
	emit-sfx 1024 from flare;
	sleep 150;
	//hide flare;
	wait-for-move barrel along z-axis;
	move barrel to z-axis [0.000000] speed [3.000000];
}

Killed(severity, corpsetype)
{
	hide flare;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type BITMAPONLY | BITMAP2;
		explode gun type BITMAPONLY | BITMAP1;
		explode barrel type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type BITMAPONLY | BITMAP2;
		explode gun type BITMAPONLY | BITMAP1;
		explode barrel type FALL | BITMAP3;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type SHATTER | BITMAP2;
		explode gun type FALL | BITMAP1;
		explode barrel type FALL | EXPLODE_ON_HIT | BITMAP3;
		return (0);
	}
	corpsetype = 3;
	explode body type SHATTER | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode gun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode barrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
}
