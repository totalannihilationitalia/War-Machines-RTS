#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  ground, pelvis, rthigh, rleg, rfoot, lthigh, lleg, lfoot,
       torso, luparm, lloarm, lfin, lnano, ruparm, rloarm, rfin,
       rnano, ant;

static-var  Static_Var_1, bMoving, Static_Var_3, Static_Var_4, spray,
            statechg_DesiredState, statechg_StateChanging;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

walk()
{
	if( TRUE )
	{
		move pelvis to y-axis [-0.539996] now;
		turn rthigh to x-axis <10.692308> now;
		turn lthigh to x-axis <-53.489011> now;
		turn torso to y-axis <5.747253> now;
		turn luparm to x-axis <38.675824> now;
		turn ruparm to x-axis <-18.093407> now;
		turn rloarm to x-axis <48.961538> now;
		turn lloarm to x-axis <48.961538> now;
		turn lleg to x-axis <53.489011> now;
		turn rleg to x-axis <53.489011> now;
		turn rfoot to x-axis <-37.846154> now;
		sleep 90;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.300000] now;
		turn rthigh to x-axis <-10.280220> now;
		turn lthigh to x-axis <-41.554945> now;
		turn torso to y-axis <3.285714> now;
		turn luparm to x-axis <32.093407> now;
		turn ruparm to x-axis <-11.098901> now;
		turn rloarm to x-axis <48.961538> now;
		turn lloarm to x-axis <48.961538> now;
		turn lleg to x-axis <41.967033> now;
		turn rleg to x-axis <81.884615> now;
		turn rfoot to x-axis <-31.263736> now;
		sleep 70;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.150000] now;
		turn rthigh to x-axis <-18.093407> now;
		turn lthigh to x-axis <-24.681319> now;
		turn torso to y-axis <0.000000> now;
		turn luparm to x-axis <27.153846> now;
		turn ruparm to x-axis <-7.401099> now;
		turn lleg to x-axis <24.681319> now;
		turn rleg to x-axis <85.587912> now;
		turn rfoot to x-axis <-23.032967> now;
		sleep 50;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.000000] now;
		turn rthigh to x-axis <-42.379121> now;
		turn lthigh to x-axis <5.340659> now;
		turn torso to y-axis <-3.285714> now;
		turn luparm to x-axis <8.219780> now;
		turn ruparm to x-axis <9.027473> now;
		turn rloarm to x-axis <48.961538> now;
		turn lloarm to x-axis <48.961538> now;
		turn lleg to x-axis <6.576923> now;
		turn lfoot to x-axis <-9.027473> now;
		turn rleg to x-axis <104.521978> now;
		turn rfoot to x-axis <0.000000> now;
		sleep 40;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.200000] now;
		turn rthigh to x-axis <-69.945055> now;
		turn lthigh to x-axis <14.802198> now;
		turn torso to y-axis <-6.159341> now;
		turn luparm to x-axis <-3.697802> now;
		turn ruparm to x-axis <17.681319> now;
		turn lleg to x-axis <15.219780> now;
		turn lfoot to x-axis <-25.093407> now;
		turn rleg to x-axis <107.401099> now;
		sleep 50;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.400000] now;
		turn rthigh to x-axis <-75.296703> now;
		turn lthigh to x-axis <20.142857> now;
		turn torso to y-axis <-8.219780> now;
		turn luparm to x-axis <-10.280220> now;
		turn ruparm to x-axis <25.093407> now;
		turn lleg to x-axis <26.324176> now;
		turn lfoot to x-axis <-33.725275> now;
		turn rleg to x-axis <64.604396> now;
		sleep 70;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.550000] now;
		turn rthigh to x-axis <-56.780220> now;
		turn lthigh to x-axis <24.263736> now;
		turn torso to y-axis <-6.159341> now;
		turn luparm to x-axis <-23.862637> now;
		turn ruparm to x-axis <31.263736> now;
		turn rloarm to x-axis <48.961538> now;
		turn lloarm to x-axis <48.961538> now;
		turn lleg to x-axis <38.675824> now;
		turn lfoot to x-axis <-38.675824> now;
		turn rleg to x-axis <56.780220> now;
		sleep 90;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.300000] now;
		turn rthigh to x-axis <-44.846154> now;
		turn lthigh to x-axis <5.340659> now;
		turn torso to y-axis <-3.285714> now;
		turn luparm to x-axis <-16.038462> now;
		turn ruparm to x-axis <19.730769> now;
		turn lleg to x-axis <67.071429> now;
		turn rfoot to x-axis <-12.329670> now;
		sleep 70;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.139996] now;
		turn rthigh to x-axis <-22.620879> now;
		turn lthigh to x-axis <-12.741758> now;
		turn torso to y-axis <0.000000> now;
		turn luparm to x-axis <-1.637363> now;
		turn ruparm to x-axis <10.280220> now;
		turn lleg to x-axis <79.417582> now;
		turn lfoot to x-axis <-27.972527> now;
		turn rleg to x-axis <37.027473> now;
		turn rfoot to x-axis <-15.631868> now;
		sleep 50;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.000000] now;
		turn rthigh to x-axis <2.868132> now;
		turn lthigh to x-axis <-42.379121> now;
		turn torso to y-axis <3.285714> now;
		turn luparm to x-axis <11.510989> now;
		turn ruparm to x-axis <1.225275> now;
		turn rloarm to x-axis <48.961538> now;
		turn lloarm to x-axis <48.961538> now;
		turn lleg to x-axis <90.109890> now;
		turn lfoot to x-axis <-15.219780> now;
		turn rleg to x-axis <6.576923> now;
		turn rfoot to x-axis <-9.439560> now;
		sleep 40;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.189996] now;
		turn rthigh to x-axis <13.159341> now;
		turn lthigh to x-axis <-57.192308> now;
		turn torso to y-axis <6.159341> now;
		turn luparm to x-axis <21.390110> now;
		turn ruparm to x-axis <-6.989011> now;
		turn rfoot to x-axis <-19.324176> now;
		sleep 50;
	}
	move pelvis to y-axis [-0.400000] now;
	turn rthigh to x-axis <16.450549> now;
	turn lthigh to x-axis <-67.071429> now;
	turn torso to y-axis <8.219780> now;
	turn luparm to x-axis <25.093407> now;
	turn ruparm to x-axis <-12.329670> now;
	turn lleg to x-axis <55.549451> now;
	turn lfoot to x-axis <-2.868132> now;
	turn rleg to x-axis <24.681319> now;
	turn rfoot to x-axis <-33.324176> now;
	sleep 70;
}

walklegs()
{
	if( TRUE )
	{
		move pelvis to y-axis [-0.539996] now;
		turn rthigh to x-axis <10.692308> now;
		turn lthigh to x-axis <-53.489011> now;
		turn lleg to x-axis <53.489011> now;
		turn rleg to x-axis <53.489011> now;
		turn rfoot to x-axis <-37.846154> now;
		sleep 90;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.300000] now;
		turn rthigh to x-axis <-10.280220> now;
		turn lthigh to x-axis <-41.554945> now;
		turn lleg to x-axis <41.967033> now;
		turn rleg to x-axis <81.884615> now;
		turn rfoot to x-axis <-31.263736> now;
		sleep 70;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.150000] now;
		turn rthigh to x-axis <-18.093407> now;
		turn lthigh to x-axis <-24.681319> now;
		turn lleg to x-axis <24.681319> now;
		turn rleg to x-axis <85.587912> now;
		turn rfoot to x-axis <-23.032967> now;
		sleep 50;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.000000] now;
		turn rthigh to x-axis <-42.379121> now;
		turn lthigh to x-axis <5.340659> now;
		turn lleg to x-axis <6.576923> now;
		turn lfoot to x-axis <-9.027473> now;
		turn rleg to x-axis <104.521978> now;
		turn rfoot to x-axis <0.000000> now;
		sleep 40;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.200000] now;
		turn rthigh to x-axis <-69.945055> now;
		turn lthigh to x-axis <14.802198> now;
		turn lleg to x-axis <15.219780> now;
		turn lfoot to x-axis <-25.093407> now;
		turn rleg to x-axis <107.401099> now;
		sleep 50;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.400000] now;
		turn rthigh to x-axis <-75.296703> now;
		turn lthigh to x-axis <20.142857> now;
		turn lleg to x-axis <26.324176> now;
		turn lfoot to x-axis <-33.725275> now;
		turn rleg to x-axis <64.604396> now;
		sleep 70;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.550000] now;
		turn rthigh to x-axis <-56.780220> now;
		turn lthigh to x-axis <24.263736> now;
		turn lleg to x-axis <38.675824> now;
		turn lfoot to x-axis <-38.675824> now;
		turn rleg to x-axis <56.780220> now;
		sleep 90;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.300000] now;
		turn rthigh to x-axis <-44.846154> now;
		turn lthigh to x-axis <5.340659> now;
		turn lleg to x-axis <67.071429> now;
		turn rfoot to x-axis <-12.329670> now;
		sleep 70;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.139996] now;
		turn rthigh to x-axis <-22.620879> now;
		turn lthigh to x-axis <-12.741758> now;
		turn lleg to x-axis <79.417582> now;
		turn lfoot to x-axis <-27.972527> now;
		turn rleg to x-axis <37.027473> now;
		turn rfoot to x-axis <-15.631868> now;
		sleep 50;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.000000] now;
		turn rthigh to x-axis <2.868132> now;
		turn lthigh to x-axis <-42.379121> now;
		turn lleg to x-axis <90.109890> now;
		turn lfoot to x-axis <-15.219780> now;
		turn rleg to x-axis <6.576923> now;
		turn rfoot to x-axis <-9.439560> now;
		sleep 40;
	}
	if( TRUE )
	{
		move pelvis to y-axis [-0.189996] now;
		turn rthigh to x-axis <13.159341> now;
		turn lthigh to x-axis <-57.192308> now;
		turn rfoot to x-axis <-19.324176> now;
		sleep 50;
	}
	move pelvis to y-axis [-0.400000] now;
	turn rthigh to x-axis <16.450549> now;
	turn lthigh to x-axis <-67.071429> now;
	turn lleg to x-axis <55.549451> now;
	turn lfoot to x-axis <-2.868132> now;
	turn rleg to x-axis <24.681319> now;
	turn rfoot to x-axis <-33.324176> now;
	sleep 70;
}

stand()
{
	turn pelvis to x-axis <0.000000> speed <100.000000>;
	turn lthigh to x-axis <0.000000> speed <200.000000>;
	turn lleg to x-axis <0.000000> speed <200.000000>;
	turn lfoot to x-axis <0.000000> speed <200.000000>;
	turn rthigh to x-axis <0.000000> speed <200.000000>;
	turn rleg to x-axis <0.000000> speed <200.000000>;
	turn rfoot to x-axis <0.000000> speed <200.000000>;
	sleep 23;
}

open()
{
	if( TRUE )
	{
		dont-cache rfin;
		dont-cache lfin;
		dont-cache ant;
		turn lnano to x-axis <0.000000> now;
		turn lfin to y-axis <-42.005495> speed <83.000000>;
		turn rnano to x-axis <0.000000> now;
		turn rfin to y-axis <38.005495> speed <80.000000>;
		move ant to y-axis [3.800000] speed [4.000000];
		move ant to z-axis [-0.900000] speed [1.000000];
	}
	sleep 600;
}

close()
{
	if( TRUE )
	{
		cache rfin;
		cache lfin;
		cache ant;
		turn luparm to x-axis <0.000000> speed <45.000000>;
		turn lloarm to x-axis <80.016484> speed <45.000000>;
		turn lfin to y-axis <0.000000> speed <26.000000>;
		turn ruparm to x-axis <0.000000> speed <45.000000>;
		turn rloarm to x-axis <80.016484> speed <45.000000>;
		turn rfin to y-axis <0.000000> speed <25.000000>;
		move ant to y-axis [0.000000] speed [4.000000];
		move ant to z-axis [0.000000] speed [1.000000];
	}
	sleep 500;
}

MotionControl(Func_Var_1, Func_Var_2)
{
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		Func_Var_2 = Static_Var_3;
		if( Func_Var_1 )
		{
			if( Func_Var_2 )
			{
				Static_Var_4 = 1;
				call-script walklegs();
			}
			if( !Func_Var_2 )
			{
				Static_Var_4 = 0;
				call-script walk();
			}
		}
		if( !Func_Var_1 )
		{
			Static_Var_4 = 1;
			call-script stand();
		}
	}
}

Go()
{
	Static_Var_3 = 1;
	dont-cache lnano;
	dont-cache rnano;
	call-script open();
	turn torso to y-axis Static_Var_1 speed <150.000000>;
	turn luparm to x-axis <0.000000> speed <200.000000>;
	turn lloarm to x-axis <0.000000> speed <200.000000>;
	turn ruparm to x-axis <0.000000> speed <200.000000>;
	turn rloarm to x-axis <0.000000> speed <200.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn lloarm around x-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn rloarm around x-axis;
	set INBUILDSTANCE to 1;
}

Stop()
{
	set INBUILDSTANCE to 0;
	cache lnano;
	cache rnano;
	turn torso to y-axis <0.000000> speed <90.000000>;
	wait-for-turn torso around y-axis;
	call-script close();
	Static_Var_3 = 0;
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	hide rnano;
	hide lnano;
	turn luparm to x-axis <0.000000> now;
	turn lloarm to x-axis <60.010989> now;
	turn lnano to x-axis <0.000000> now;
	turn ruparm to x-axis <0.000000> now;
	turn rloarm to x-axis <60.010989> now;
	turn rnano to x-axis <0.000000> now;
	turn ant to x-axis <-15.000000> now;
	cache lfin;
	cache rfin;
	cache ant;
	dont-shade lnano;
	dont-shade rnano;
	spray = ground;
	Static_Var_1 = 0;
	bMoving = FALSE;
	Static_Var_3 = 0;
	Static_Var_4 = 1;
	call-script InitState();
	start-script SmokeUnit();
	start-script MotionControl();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

StartBuilding(Func_Var_1)
{
	Static_Var_1 = Func_Var_1;
	start-script RequestState(0);
}

StopBuilding()
{
	start-script RequestState(1);
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

QueryNanoPiece(piecenum)
{
	if( spray == 0 )
	{
		piecenum = lnano;
	}
	if( spray != 0 )
	{
		piecenum = rnano;
	}
	spray = !spray;
}

TargetHeading(Func_Var_1)
{
	Static_Var_1 = 0 - Func_Var_1;
}

Killed(severity, corpsetype)
{
	hide rnano;
	hide lnano;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode pelvis type BITMAPONLY | BITMAP1;
		explode rthigh type BITMAPONLY | BITMAP2;
		explode rleg type BITMAPONLY | BITMAP3;
		explode rfoot type BITMAPONLY | BITMAP4;
		explode lthigh type BITMAPONLY | BITMAP5;
		explode lleg type BITMAPONLY | BITMAP1;
		explode lfoot type BITMAPONLY | BITMAP2;
		explode torso type BITMAPONLY | BITMAP3;
		explode luparm type BITMAPONLY | BITMAP4;
		explode lloarm type BITMAPONLY | BITMAP5;
		explode lfin type BITMAPONLY | BITMAP1;
		explode lnano type BITMAPONLY | BITMAP2;
		explode ruparm type BITMAPONLY | BITMAP3;
		explode rloarm type BITMAPONLY | BITMAP4;
		explode rfin type BITMAPONLY | BITMAP5;
		explode rnano type BITMAPONLY | BITMAP1;
		explode ant type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode pelvis type FALL | BITMAP1;
		explode rthigh type FALL | BITMAP2;
		explode rleg type FALL | BITMAP3;
		explode rfoot type FALL | BITMAP4;
		explode lthigh type FALL | BITMAP5;
		explode lleg type FALL | BITMAP1;
		explode lfoot type FALL | BITMAP2;
		explode torso type SHATTER | BITMAP3;
		explode luparm type FALL | BITMAP4;
		explode lloarm type FALL | BITMAP5;
		explode lfin type FALL | BITMAP1;
		explode lnano type FALL | BITMAP2;
		explode ruparm type FALL | BITMAP3;
		explode rloarm type FALL | BITMAP4;
		explode rfin type FALL | BITMAP5;
		explode rnano type FALL | BITMAP1;
		explode ant type FALL | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode torso type SHATTER | BITMAP3;
		explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lfin type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lnano type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rfin type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode rnano type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode ant type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode torso type SHATTER | EXPLODE_ON_HIT | BITMAP3;
	explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lfin type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lnano type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rfin type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rnano type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode ant type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
}
