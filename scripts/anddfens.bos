//Core D-FENS script by cool man

#define TA

piece base,bottom,turret,sleeves,barrel1,barrel2,barrel3,flare1,flare2,flare3;

static-var next_barrel;

#define SMOKEPIECE1 turret
#define SIG_AIM 2
#include "smokeunit.h"
#include "exptype.h"

Create()
	{
	hide flare1;
	hide flare2;
        hide flare3;
	dont-cache turret;
	dont-cache bottom;
	dont-cache barrel1;
	dont-cache barrel2;
	dont-cache barrel3;
	dont-cache sleeves;
	dont-cache flare1;
	dont-cache flare2;
	dont-cache flare3;
	next_barrel = 0;
	start-script SmokeUnit();
	}

QueryPrimary(piecenum)
	{
	if (next_barrel == 0)
		{
		piecenum=flare1;
		}
	if (next_barrel == 1)
		{
		piecenum=flare2;
		}
	if (next_barrel == 2)
		{
		piecenum=flare3;
		}
	}

AimFromPrimary(piecenum)
	{
	piecenum=turret;
	}

AimPrimary(heading,pitch)
        {
        signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <30>;
	turn sleeves to x-axis (0-pitch) speed <10>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeves around x-axis;
	return(TRUE);
	}

FirePrimary()
	{
            if (next_barrel == 0)
		{
		move barrel1 to z-axis [-3] speed [500];
		show flare1;
		sleep 150;
		hide flare1;
		move barrel1 to z-axis [0] speed [1];
		}
	if (next_barrel == 1)
		{
		move barrel2 to z-axis [-3] speed [500];
		show flare2;
		sleep 150;
		hide flare2;
		move barrel2 to z-axis [0] speed [1];
		}
	if (next_barrel == 2)
		{
		move barrel3 to z-axis [-3] speed [500];
		show flare3;
		sleep 150;
		hide flare3;
		move barrel3 to z-axis [0] speed [1];
		}
	next_barrel=next_barrel+1;
	if (next_barrel == 3) 
		{
		next_barrel = 0; 
		}
	}

SweetSpot(piecenum)
	{
	piecenum=base;
	}

Killed( severity, corpsetype )
	{
	hide flare1;
	hide flare2;
	hide flare3;
	if (severity <= 25)
		{
		corpsetype = 1;
		explode barrel1 type	BITMAPONLY | BITMAP1;
		explode barrel2 type	BITMAPONLY | BITMAP2;
		explode barrel3 type	BITMAPONLY | BITMAP4;
		explode bottom type	BITMAPONLY | BITMAP3;
		explode flare1 type	BITMAPONLY | BITMAP4;
		explode flare2 type	BITMAPONLY | BITMAP5;
		explode flare3 type	BITMAPONLY | BITMAP1;
		explode sleeves type	BITMAPONLY | BITMAP1;
		explode turret type	BITMAPONLY | BITMAP2;
		return( 0 );
		}

	if (severity <= 50)
		{
		corpsetype = 1;
		explode barrel1 type	FALL | BITMAP1;
		explode barrel2 type	FALL | BITMAP2;
		explode barrel3 type	FALL | BITMAP3;
		explode bottom type	BITMAPONLY | BITMAP3;
		explode flare1 type	FALL | BITMAP4;
		explode flare2 type	FALL | BITMAP5;
		explode flare3 type	FALL | BITMAP2;
		explode sleeves type	SHATTER | BITMAP1;
		explode turret type	BITMAPONLY | BITMAP2;

		return( 0 );
		}

	if (severity <= 99)
		{
		corpsetype = 3;
		explode barrel1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode barrel2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode barrel3 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode bottom type	BITMAPONLY | BITMAP3;
		explode flare1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode flare2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode flare3 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode sleeves type	SHATTER | BITMAP1;
		explode turret type	BITMAPONLY | BITMAP2;
		return( 0 );
		}

	corpsetype = 3;
	explode barrel1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode barrel2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode barrel3 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode bottom type	BITMAPONLY | BITMAP3;
	explode flare1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode flare2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode flare3 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode sleeves type	SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode turret type	BITMAPONLY | BITMAP2;
	return( 0 );
	}
