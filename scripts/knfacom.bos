#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, testa, attb, attd, rbigflash, nanospray,
       pelvis, lfirept, lthigh, rthigh,  rleg, lleg,
       ground;

static-var  bMoving, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7;

// Signal definitions
#define SIG_AIM				2


Build()
{
	while( Static_Var_4 )
	{
		emit-sfx 1025 from nanospray;
		sleep 100;
	}
}

walk()
{
	if( bMoving )
	{
		turn lthigh to z-axis <0.000000> speed <120.000000>;
		turn lthigh to y-axis <-50.000000> speed <80.000000>;
		turn attb to y-axis <5.000000> speed <80.000000>;
		turn attb to z-axis <10.000000> speed <120.000000>;
		turn pelvis to z-axis <-2.000000> speed <5.000000>;
		turn rthigh to z-axis <-10.000000> speed <120.000000>;
		turn rthigh to y-axis <-50.000000> speed <80.000000>;
		turn attd to y-axis <70.000000> speed <60.000000>;
		turn attd to z-axis <0.000000> speed <120.000000>;
		wait-for-turn rthigh around y-axis;
		turn lthigh to z-axis <10.000000> speed <120.000000>;
		turn lthigh to y-axis <50.000000> speed <80.000000>;
		turn attb to y-axis <-70.000000> speed <60.000000>;
		turn attb to z-axis <0.000000> speed <120.000000>;
		turn pelvis to z-axis <2.000000> speed <5.000000>;
		turn attd to z-axis <-10.000000> speed <120.000000>;
		turn rthigh to y-axis <50.000000> speed <80.000000>;
		turn rthigh to z-axis <0.000000> speed <120.000000>;
		turn attd to y-axis <-5.000000> speed <80.000000>;
		wait-for-turn rthigh around y-axis;
	}
}

walklegs()
{
	if( bMoving )
	{
		turn lthigh to x-axis <-25.000000> speed <50.000000>;
		turn pelvis to z-axis <-2.000000> speed <5.000000>;
	}
	if( bMoving )
	{
		move lthigh to y-axis [0.500000] speed [20.000000];
		turn lleg to x-axis <20.000000> speed <100.000000>;
		turn rthigh to x-axis <20.000000> speed <50.000000>;
	}
	if( bMoving )
	{
		move rthigh to y-axis [0.000000] speed [20.000000];
		turn rleg to x-axis <0.000000> speed <50.000000>;
		wait-for-turn rthigh around x-axis;
	}
	if( bMoving )
	{
		turn lthigh to x-axis <20.000000> speed <50.000000>;
		turn pelvis to z-axis <2.000000> speed <5.000000>;
	}
	if( bMoving )
	{
		move lthigh to y-axis [0.000000] speed [20.000000];
		turn lleg to x-axis <0.000000> speed <50.000000>;
		turn rthigh to x-axis <-25.000000> speed <50.000000>;
	}
	if( bMoving )
	{
		move rthigh to y-axis [0.500000] speed [20.000000];
		turn rleg to x-axis <20.000000> speed <100.000000>;
		wait-for-turn rthigh around x-axis;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = Static_Var_2;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				move pelvis to y-axis [0.000000] speed [1.000000];
				turn rthigh to x-axis <0.000000> speed <200.000000>;
				turn rleg to x-axis <0.000000> speed <200.000000>;
				turn lthigh to x-axis <0.000000> speed <200.000000>;
				turn lleg to x-axis <0.000000> speed <200.000000>;
				if( !aiming )
				{
					turn torso to x-axis <0.000000> speed <90.000000>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	turn attb to y-axis <-60.000000> now;
	turn lthigh to y-axis <55.000000> now;
	hide ground;
	hide rbigflash;
	hide lfirept;
	hide nanospray;
	bMoving = FALSE;
	Static_Var_2 = 0;
	Static_Var_3 = 1;
	Static_Var_5 = 0;
	start-script MotionControl();
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

QueryNanoPiece(piecenum)
{
	piecenum = nanospray;
}

RestorePosition()
{
	Static_Var_5 = 0;
	turn torso to y-axis <0.000000> speed <90.000000>;
	turn testa to y-axis <0.000000> speed <90.000000>;
	turn testa to x-axis <0.000000> speed <90.000000>;
	wait-for-turn torso around y-axis;
	Static_Var_2 = 0;
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

AimFromSecondary(piecenum)
{
	piecenum = pelvis;
}

QueryPrimary(piecenum)
{
	piecenum = lfirept;
}

QuerySecondary(piecenum)
{
	piecenum = rbigflash;
}

AimPrimary(heading, pitch)
{
	bMoving = TRUE;
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn torso to y-axis heading speed <250.000000>;
	wait-for-turn torso around y-axis;
	return (1);
}

AimSecondary(heading, pitch)
{
	bMoving = FALSE;
	signal Static_Var_7;
	set-signal-mask Static_Var_7;
	return (1);
}

FireSecondary()
{
//	emit-sfx 1024 + 2 from rbigflash;

}

FirePrimary()
{
//	emit-sfx 1024 from lfirept;
}

StartBuilding(Func_Var_1, Func_Var_2)
{
	Static_Var_2 = 1;
	while( !Static_Var_3 )
	{
		sleep 30;
	}
	turn testa to y-axis Func_Var_1 speed <300.000000>;
	turn testa to x-axis <0.000000> - Func_Var_2 - <0.000000> speed <90.000000>;
	wait-for-turn testa around y-axis;
	wait-for-turn testa around x-axis;
	set INBUILDSTANCE to 1;
	emit-sfx 1025 from nanospray;
	Static_Var_4 = 1;
	start-script Build();
}

TargetCleared(Func_Var_1)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	call-script RestorePosition();
}

StopBuilding()
{
	set INBUILDSTANCE to 0;
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	call-script RestorePosition();
	Static_Var_4 = 0;
}
