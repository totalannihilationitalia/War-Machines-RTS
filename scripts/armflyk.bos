#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, flare;

// Signal definitions
#define SIG_AIM				2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide flare;
	start-script SmokeUnit();
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}



AimFromPrimary(piecenum)
{
	piecenum = flare;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
//	bAiming = TRUE;
//	while( !Static_Var_3 )
//	{
//		sleep 100;
//	}
//	turn turret to y-axis heading speed <250.060440>;
//	wait-for-turn turret around y-axis;
//	start-script RestoreAfterDelay();
	return (1);
}

PostFire()
{
	sleep 200;
}

FirePrimary()
{
	start-script PostFire();
	return (1);
}

Killed(severity, corpsetype)
{
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
}
