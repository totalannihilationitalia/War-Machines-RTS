#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, luparm, ruparm, pelvis, rthigh, lthigh, rloarm,
       lloarm, lleg, lfoot, rleg, rfoot, barrel1, flare1, barrel2,
       flare2, missilepod, flare3, h1, h2, h3, h4, wing1,
       wing2;

static-var  bMoving, bAiming, Static_Var_3, Static_Var_4, restore_delay,
            gun_1;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4


walk()
{
	if( bMoving )
	{
		turn pelvis to x-axis <3.000000> now;
		turn rthigh to x-axis <17.000000> now;
		turn lthigh to x-axis <-41.005495> now;
		turn torso to y-axis <5.000000> now;
		turn luparm to x-axis <20.000000> now;
		turn ruparm to x-axis <-10.000000> now;
		turn lleg to x-axis <31.005495> now;
		turn lfoot to x-axis <-4.000000> now;
		turn rleg to x-axis <17.000000> now;
		turn rfoot to x-axis <-27.005495> now;
		sleep 120;
	}
	if( bMoving )
	{
		turn pelvis to x-axis <5.000000> now;
		turn rthigh to x-axis <7.000000> now;
		turn lthigh to x-axis <-32.005495> now;
		turn torso to y-axis <3.000000> now;
		turn luparm to x-axis <25.005495> now;
		turn ruparm to x-axis <-5.000000> now;
		turn lleg to x-axis <22.000000> now;
		turn lfoot to x-axis <-5.000000> now;
		turn rleg to x-axis <29.005495> now;
		turn rfoot to x-axis <-26.005495> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <4.000000> now;
		turn rthigh to x-axis <-10.000000> now;
		turn lthigh to x-axis <-26.005495> now;
		turn torso to y-axis <0.000000> now;
		turn luparm to x-axis <19.000000> now;
		turn ruparm to x-axis <0.000000> now;
		turn lfoot to x-axis <9.000000> now;
		turn rleg to x-axis <41.005495> now;
		sleep 100;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <3.000000> now;
		turn rthigh to x-axis <-19.000000> now;
		turn lthigh to x-axis <1.000000> now;
		turn torso to y-axis <-3.000000> now;
		turn luparm to x-axis <10.000000> now;
		turn ruparm to x-axis <10.000000> now;
		turn lleg to x-axis <-4.000000> now;
		turn lfoot to x-axis <-8.000000> now;
		turn rleg to x-axis <42.005495> now;
		turn rfoot to x-axis <-22.000000> now;
		sleep 90;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <3.000000> now;
		turn rthigh to x-axis <-41.005495> now;
		turn lthigh to x-axis <7.000000> now;
		turn torso to y-axis <-5.000000> now;
		turn luparm to x-axis <0.000000> now;
		turn ruparm to x-axis <20.000000> now;
		turn lleg to x-axis <-1.000000> now;
		turn lfoot to x-axis <-16.000000> now;
		turn rleg to x-axis <40.005495> now;
		turn rfoot to x-axis <-5.000000> now;
		sleep 100;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <3.000000> now;
		turn rthigh to x-axis <-49.005495> now;
		turn lthigh to x-axis <11.000000> now;
		turn torso to y-axis <-8.000000> now;
		turn luparm to x-axis <-5.000000> now;
		turn ruparm to x-axis <25.005495> now;
		turn lleg to x-axis <8.000000> now;
		turn lfoot to x-axis <-22.000000> now;
		turn rleg to x-axis <22.000000> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <3.000000> now;
		turn rthigh to x-axis <-44.005495> now;
		turn lthigh to x-axis <18.000000> now;
		turn torso to y-axis <-5.000000> now;
		turn luparm to x-axis <-10.000000> now;
		turn ruparm to x-axis <20.000000> now;
		turn lleg to x-axis <12.000000> now;
		turn lfoot to x-axis <-26.005495> now;
		turn rleg to x-axis <38.005495> now;
		turn rfoot to x-axis <-8.000000> now;
		sleep 120;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <5.000000> now;
		turn rthigh to x-axis <-32.005495> now;
		turn lthigh to x-axis <3.000000> now;
		turn torso to y-axis <-3.000000> now;
		turn luparm to x-axis <-15.000000> now;
		turn ruparm to x-axis <15.000000> now;
		turn lleg to x-axis <33.005495> now;
		turn lfoot to x-axis <-27.005495> now;
		turn rleg to x-axis <30.005495> now;
		turn rfoot to x-axis <-12.000000> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <4.000000> now;
		turn rthigh to x-axis <-25.005495> now;
		turn lthigh to x-axis <-11.000000> now;
		turn torso to y-axis <0.000000> now;
		turn luparm to x-axis <-10.000000> now;
		turn ruparm to x-axis <10.000000> now;
		turn lleg to x-axis <47.005495> now;
		turn rleg to x-axis <25.005495> now;
		turn rfoot to x-axis <-15.000000> now;
		sleep 100;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <3.000000> now;
		turn rthigh to x-axis <6.000000> now;
		turn lthigh to x-axis <-25.005495> now;
		turn torso to y-axis <3.000000> now;
		turn luparm to x-axis <0.000000> now;
		turn ruparm to x-axis <0.000000> now;
		turn lleg to x-axis <55.005495> now;
		turn lfoot to x-axis <-26.005495> now;
		turn rleg to x-axis <-7.000000> now;
		turn rfoot to x-axis <-11.000000> now;
		sleep 90;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <3.000000> now;
		turn rthigh to x-axis <16.000000> now;
		turn lthigh to x-axis <-39.005495> now;
		turn torso to y-axis <5.000000> now;
		turn luparm to x-axis <10.000000> now;
		turn ruparm to x-axis <-10.000000> now;
		turn lleg to x-axis <44.005495> now;
		turn lfoot to x-axis <-23.005495> now;
		turn rleg to x-axis <-3.000000> now;
		turn rfoot to x-axis <-18.000000> now;
		sleep 100;
	}
	move pelvis to y-axis [0.000000] now;
	turn pelvis to x-axis <3.000000> now;
	turn rthigh to x-axis <22.000000> now;
	turn lthigh to x-axis <-47.005495> now;
	turn torso to y-axis <0.000000> now;
	turn luparm to x-axis <0.000000> now;
	turn ruparm to x-axis <0.000000> now;
	turn lleg to x-axis <30.005495> now;
	turn lfoot to x-axis <-7.000000> now;
	turn rleg to x-axis <0.000000> now;
	turn rfoot to x-axis <-23.005495> now;
	sleep 110;
}

walklegs()
{
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <3.000000> now;
		turn rthigh to x-axis <17.000000> now;
		turn lthigh to x-axis <-41.005495> now;
		turn lleg to x-axis <41.005495> now;
		turn lfoot to x-axis <-4.000000> now;
		turn rleg to x-axis <27.005495> now;
		turn rfoot to x-axis <-27.005495> now;
		sleep 120;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <5.000000> now;
		turn rthigh to x-axis <7.000000> now;
		turn lthigh to x-axis <-32.005495> now;
		turn lleg to x-axis <32.005495> now;
		turn lfoot to x-axis <-5.000000> now;
		turn rleg to x-axis <39.005495> now;
		turn rfoot to x-axis <-26.005495> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <4.000000> now;
		turn rthigh to x-axis <-10.000000> now;
		turn lthigh to x-axis <-26.005495> now;
		turn lfoot to x-axis <-9.000000> now;
		turn rleg to x-axis <51.005495> now;
		sleep 100;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <3.000000> now;
		turn rthigh to x-axis <-19.000000> now;
		turn lthigh to x-axis <1.000000> now;
		turn lleg to x-axis <6.000000> now;
		turn lfoot to x-axis <-8.000000> now;
		turn rleg to x-axis <52.005495> now;
		turn rfoot to x-axis <-22.000000> now;
		sleep 90;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <3.000000> now;
		turn rthigh to x-axis <-41.005495> now;
		turn lthigh to x-axis <7.000000> now;
		turn lleg to x-axis <9.000000> now;
		turn lfoot to x-axis <-16.000000> now;
		turn rleg to x-axis <50.005495> now;
		turn rfoot to x-axis <-5.000000> now;
		sleep 100;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <3.000000> now;
		turn rthigh to x-axis <-49.005495> now;
		turn lthigh to x-axis <11.000000> now;
		turn lleg to x-axis <18.000000> now;
		turn lfoot to x-axis <-22.000000> now;
		turn rleg to x-axis <32.005495> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <3.000000> now;
		turn rthigh to x-axis <-44.005495> now;
		turn lthigh to x-axis <18.000000> now;
		turn lleg to x-axis <22.000000> now;
		turn lfoot to x-axis <-26.005495> now;
		turn rleg to x-axis <48.005495> now;
		turn rfoot to x-axis <-8.000000> now;
		sleep 120;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <5.000000> now;
		turn rthigh to x-axis <-32.005495> now;
		turn lthigh to x-axis <3.000000> now;
		turn lleg to x-axis <43.005495> now;
		turn lfoot to x-axis <-27.005495> now;
		turn rleg to x-axis <40.005495> now;
		turn rfoot to x-axis <-12.000000> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <4.000000> now;
		turn rthigh to x-axis <-25.005495> now;
		turn lthigh to x-axis <-11.000000> now;
		turn lleg to x-axis <62.005495> now;
		turn rleg to x-axis <35.005495> now;
		turn rfoot to x-axis <-15.000000> now;
		sleep 100;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <3.000000> now;
		turn rthigh to x-axis <6.000000> now;
		turn lthigh to x-axis <-25.005495> now;
		turn lleg to x-axis <71.016484> now;
		turn lfoot to x-axis <-26.005495> now;
		turn rleg to x-axis <3.000000> now;
		turn rfoot to x-axis <-11.000000> now;
		sleep 90;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <3.000000> now;
		turn rthigh to x-axis <16.000000> now;
		turn lthigh to x-axis <-39.005495> now;
		turn lleg to x-axis <54.005495> now;
		turn lfoot to x-axis <-23.005495> now;
		turn rleg to x-axis <7.000000> now;
		turn rfoot to x-axis <-18.000000> now;
		sleep 100;
	}
	move pelvis to y-axis [0.000000] now;
	turn pelvis to x-axis <3.000000> now;
	turn rthigh to x-axis <22.000000> now;
	turn lthigh to x-axis <-47.005495> now;
	turn lleg to x-axis <40.005495> now;
	turn lfoot to x-axis <-7.000000> now;
	turn rleg to x-axis <10.000000> now;
	turn rfoot to x-axis <-23.005495> now;
	sleep 110;
}

stand()
{
	move pelvis to y-axis [0.000000] speed [1.000000];
	turn pelvis to x-axis <0.000000> speed <200.038462>;
	turn rthigh to x-axis <0.000000> speed <200.038462>;
	turn rleg to x-axis <0.000000> speed <200.038462>;
	turn rfoot to x-axis <0.000000> speed <200.038462>;
	turn lthigh to x-axis <0.000000> speed <200.038462>;
	turn lleg to x-axis <0.000000> speed <200.038462>;
	turn lfoot to x-axis <0.000000> speed <200.038462>;
	sleep 200;
}

MotionControl(Func_Var_1, Func_Var_2)
{
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		Func_Var_2 = bAiming;
		if( Func_Var_1 )
		{
			if( Func_Var_2 )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			if( !Func_Var_2 )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
		}
		if( !Func_Var_1 )
		{
			Static_Var_3 = 1;
			call-script stand();
		}
	}
}

Create()
{
	hide flare2;
	hide flare1;
	hide flare3;
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_3 = 1;
	Static_Var_4 = 0;
	gun_1 = torso;
	restore_delay = 3000;
	start-script MotionControl();
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

RestoreAfterDelay2()
{
	sleep restore_delay;
	turn missilepod to y-axis <0.000000> speed <90.016484>;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn torso to y-axis <0.000000> speed <90.016484>;
	turn ruparm to x-axis <0.000000> speed <45.005495>;
	turn rloarm to x-axis <0.000000> speed <45.005495>;
	turn luparm to x-axis <0.000000> speed <45.005495>;
	turn lloarm to x-axis <0.000000> speed <45.005495>;
	move barrel1 to y-axis [0.000000] speed [3.000000];
	move barrel2 to y-axis [0.000000] speed [3.000000];
	move h2 to z-axis [0.000000] speed [1.000000];
	move h4 to z-axis [0.000000] speed [1.000000];
	move h1 to z-axis [0.000000] speed [1.000000];
	move h3 to z-axis [0.000000] speed [1.000000];
	bAiming = FALSE;
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = flare1;
	}
	if( gun_1 == 1 )
	{
		piecenum = flare2;
	}
}

AimPrimary(heading, pitch)
{
	if( Static_Var_4 == 1 )
	{
		return (0);
	}
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	while( !Static_Var_3 )
	{
		sleep 100;
	}
	turn torso to y-axis heading speed <300.071429>;
	turn ruparm to x-axis <-45.005495> speed <45.005495>;
	turn rloarm to x-axis <-45.005495> speed <60.005495>;
	turn luparm to x-axis <-45.005495> speed <45.005495>;
	turn lloarm to x-axis <-45.005495> speed <60.005495>;
	move barrel1 to y-axis [-3.000000] speed [-112.143988];
	move barrel2 to y-axis [-3.000000] speed [-112.143988];
	move h2 to z-axis [2.000000] speed [-112.143988];
	move h4 to z-axis [2.000000] speed [-112.143988];
	move h1 to z-axis [-2.000000] speed [-112.143988];
	move h3 to z-axis [-2.000000] speed [-112.143988];
	wait-for-move h2 along z-axis;
	wait-for-move h4 along z-axis;
	wait-for-move h3 along z-axis;
	wait-for-move h1 along z-axis;
	wait-for-move barrel1 along y-axis;
	wait-for-move barrel2 along y-axis;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn rloarm around x-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn lloarm around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		move barrel1 to y-axis [-1.000000] speed [-24.287988];
		emit-sfx 1024 + 0 from flare1;
		sleep 100;
		wait-for-move barrel1 along y-axis;
		move barrel1 to y-axis [-3.000000] speed [3.000000];
	}
	if( gun_1 == 1 )
	{
		move barrel2 to y-axis [-1.000000] speed [-24.287988];
		emit-sfx 1024 + 0 from flare2;
		sleep 100;
		wait-for-move barrel2 along y-axis;
		move barrel2 to y-axis [-3.000000] speed [3.000000];
	}
	++gun_1;
	if( gun_1 == 2 )
	{
		gun_1 = torso;
	}
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	turn missilepod to y-axis heading speed <100.016484>;
	wait-for-turn missilepod around y-axis;
	start-script RestoreAfterDelay2();
	return (1);
}

FireSecondary()
{
	emit-sfx 1024 + 1 from flare3;
	sleep 100;
}

AimFromSecondary(piecenum)
{
	piecenum = missilepod;
}

QuerySecondary(piecenum)
{
	piecenum = flare3;
}

Killed(severity, corpsetype)
{
	hide flare2;
	hide flare1;
	hide flare3;
	if( severity <= 25 )
	{
		corpsetype = 1;
//		explode ground type BITMAPONLY | BITMAP1;
//		explode lhand type BITMAPONLY | BITMAP3;
		explode lloarm type BITMAPONLY | BITMAP5;
		explode lthigh type BITMAPONLY | BITMAP1;
		explode luparm type BITMAPONLY | BITMAP2;
		explode rfoot type BITMAPONLY | BITMAP5;
		explode rleg type BITMAPONLY | BITMAP1;
		explode rthigh type BITMAPONLY | BITMAP3;
		explode wing1 type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
//		explode ground type BITMAPONLY | BITMAP1;
		explode lfoot type FALL | BITMAP2;
//		explode hand type FALL | SMOKE | BITMAP3;
		explode lleg type FALL | BITMAP4;
		explode lloarm type FALL | SMOKE | BITMAP5;
		explode lthigh type FALL | BITMAP1;
		explode luparm type FALL | SMOKE | BITMAP2;
		explode pelvis type FALL | BITMAP3;
		explode rfoot type FALL | BITMAP5;
		explode rleg type FALL | SMOKE | BITMAP1;
		explode rloarm type FALL | BITMAP2;
		explode rthigh type FALL | SMOKE | BITMAP3;
		explode wing1 type FALL | SMOKE | BITMAP3;
		explode ruparm type FALL | BITMAP4;
		explode torso type SHATTER | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 2;
//		explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
//		explode hand type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode wing1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode wing2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode torso type SHATTER | BITMAP5;
		return (0);
	}
	corpsetype = 3;
//	explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
//	explode hand type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode wing1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode torso type SHATTER | EXPLODE_ON_HIT | BITMAP5;
}
