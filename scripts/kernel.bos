#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  root, whole, base0, pillar0, head0, tip0, base1, pillar1,
       head1, tip1, base2, pillar2, head2, tip2, base3, pillar3,
       head3, tip3, pad, shoulder, arm, hand, finger;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7, Static_Var_8;

// Signal definitions
#define SIG_ACTIVATE			64


GetPillar0Ready()
{
	turn pillar0 to x-axis <30.000000> speed <15.000000>;
	turn head0 to x-axis <35.000000> speed <15.000000>;
	move head0 to y-axis [0.000000] speed [6.000000];
	move pillar0 to y-axis [0.000000] speed [16.000000];
	wait-for-move pillar0 along y-axis;
	move head0 to y-axis [0.000000] speed [16.000000];
	wait-for-move pillar0 along y-axis;
	turn pillar0 to x-axis <30.000000> speed <35.000000>;
	wait-for-turn pillar0 around x-axis;
	turn head0 to x-axis <35.000000> speed <35.000000>;
	wait-for-turn head0 around x-axis;
}

GetPillar1Ready()
{
	turn pillar1 to x-axis <30.000000> speed <15.000000>;
	turn head1 to x-axis <35.000000> speed <15.000000>;
	move head1 to y-axis [0.000000] speed [6.000000];
	move pillar1 to y-axis [0.000000] speed [16.000000];
	wait-for-move pillar1 along y-axis;
	move head1 to y-axis [0.000000] speed [16.000000];
	wait-for-move pillar1 along y-axis;
	turn pillar1 to x-axis <30.000000> speed <35.000000>;
	wait-for-turn pillar1 around x-axis;
	turn head1 to x-axis <35.000000> speed <35.000000>;
	wait-for-turn head1 around x-axis;
}

GetPillar2Ready()
{
	turn pillar2 to x-axis <30.000000> speed <15.000000>;
	turn head2 to x-axis <35.000000> speed <15.000000>;
	move head2 to y-axis [0.000000] speed [8.000000];
	move pillar2 to y-axis [0.000000] speed [16.000000];
	wait-for-move pillar2 along y-axis;
	move head2 to y-axis [0.000000] speed [16.000000];
	wait-for-move pillar2 along y-axis;
	turn pillar2 to x-axis <30.000000> speed <35.000000>;
	wait-for-turn pillar2 around x-axis;
	turn head2 to x-axis <35.000000> speed <35.000000>;
	wait-for-turn head2 around x-axis;
}

GetPillar3Ready()
{
	turn pillar3 to x-axis <30.000000> speed <15.000000>;
	turn head3 to x-axis <35.000000> speed <15.000000>;
	move head3 to y-axis [0.000000] speed [8.000000];
	move pillar3 to y-axis [0.000000] speed [16.000000];
	wait-for-move pillar3 along y-axis;
	move head3 to y-axis [0.000000] speed [16.000000];
	wait-for-move pillar3 along y-axis;
	turn pillar3 to x-axis <30.000000> speed <35.000000>;
	wait-for-turn pillar3 around x-axis;
	turn head3 to x-axis <35.000000> speed <35.000000>;
	wait-for-turn head3 around x-axis;
	set INBUILDSTANCE to 1;
}

GetPillar0Rest()
{
	set INBUILDSTANCE to 0;
	move pillar0 to y-axis [-6.000000] speed [1.000000];
	move head0 to y-axis [-5.000000] speed [1.000000];
	turn pillar0 to x-axis <0.000000> speed <5.000000>;
	turn head0 to x-axis <5.000000> speed <20.000000>;
	wait-for-turn head0 around x-axis;
	turn pillar0 to x-axis <0.000000> speed <20.000000>;
	wait-for-turn pillar0 around x-axis;
	move pillar0 to y-axis [-6.000000] speed [8.000000];
	move head0 to y-axis [-5.000000] speed [6.000000];
}

GetPillar1Rest()
{
	move pillar1 to y-axis [-6.000000] speed [1.000000];
	move head1 to y-axis [-5.000000] speed [1.000000];
	turn pillar1 to x-axis <0.000000> speed <5.000000>;
	turn head1 to x-axis <5.000000> speed <20.000000>;
	wait-for-turn head1 around x-axis;
	turn pillar1 to x-axis <0.000000> speed <20.000000>;
	wait-for-turn pillar1 around x-axis;
	move pillar1 to y-axis [-6.000000] speed [8.000000];
	move head1 to y-axis [-5.000000] speed [6.000000];
}

GetPillar2Rest()
{
	move pillar2 to y-axis [-6.000000] speed [1.000000];
	move head2 to y-axis [-5.000000] speed [1.000000];
	turn pillar2 to x-axis <0.000000> speed <5.000000>;
	turn head2 to x-axis <5.000000> speed <20.000000>;
	wait-for-turn head2 around x-axis;
	turn pillar2 to x-axis <0.000000> speed <20.000000>;
	wait-for-turn pillar2 around x-axis;
	move pillar2 to y-axis [-6.000000] speed [8.000000];
	move head2 to y-axis [-5.000000] speed [6.000000];
}

GetPillar3Rest()
{
	move pillar3 to y-axis [-6.000000] speed [1.000000];
	move head3 to y-axis [-5.000000] speed [1.000000];
	turn pillar3 to x-axis <0.000000> speed <5.000000>;
	turn head3 to x-axis <5.000000> speed <20.000000>;
	wait-for-turn head3 around x-axis;
	turn pillar3 to x-axis <0.000000> speed <20.000000>;
	wait-for-turn pillar3 around x-axis;
	move pillar3 to y-axis [-6.000000] speed [8.000000];
	move head3 to y-axis [-5.000000] speed [6.000000];
}

TurnTowardBarycenter(Func_Var_1, Func_Var_2, Func_Var_3, Func_Var_4, Func_Var_5, Func_Var_6, Func_Var_7)
{
	sleep 1;
	sleep 1;
	Func_Var_5 = 0;
	Func_Var_6 = 0;
	Func_Var_7 = 0;
	Func_Var_1 = get UNKNOWN_UNIT_VALUE(70);
	while( Func_Var_1 >= 1 )
	{
		if( 0 != get UNIT_HEIGHT(Func_Var_1) )
		{
			Func_Var_2 = get UNIT_XZ(Func_Var_1);
			Func_Var_3 = Func_Var_2 / 65536;
			Func_Var_4 = Func_Var_2 - Func_Var_3 * 65536;
			++Func_Var_5;
			Func_Var_6 = Func_Var_6 + Func_Var_3;
			Func_Var_7 = Func_Var_7 + Func_Var_4;
		}
		--Func_Var_1;
	}
	Func_Var_3 = Func_Var_6 / Func_Var_5;
	Func_Var_4 = Func_Var_7 / Func_Var_5;
	Func_Var_2 = Func_Var_3 * 65536 + Func_Var_4;
	turn pad to y-axis <0.000000> - ( get XZ_ATAN(get PIECE_XZ(pad) - Func_Var_2) + <405.000000> ) / <90.000000> * <90.000000> now;
	set UNKNOWN_UNIT_VALUE(82) to get UNKNOWN_UNIT_VALUE(82) + ( get XZ_ATAN(get PIECE_XZ(pad) - Func_Var_2) + 73710 ) / 16380 * 16380;
}

//lua_GetWhetherONSMode()
//{
//}

//lua_GetONSInfo()
//{
//}

lua_GetBeamSource()
{
}

ManageONS(Func_Var_1, Func_Var_2, Func_Var_3)
{
	Static_Var_2 = 0;
	Static_Var_3 = 0;
	Static_Var_4 = 0;
	Static_Var_5 = 0;
	Static_Var_6 = 0;
	Static_Var_7 = 0;
	Static_Var_8 = 0;
	sleep 1;
	sleep 1;
	sleep 1;
//	call-script lua_GetWhetherONSMode();
	Static_Var_2 = get UNKNOWN_UNIT_VALUE(111);
	while( TRUE )
	{
//		call-script lua_GetONSInfo();
		Static_Var_3 = get UNKNOWN_UNIT_VALUE(111);
		Static_Var_4 = get UNKNOWN_UNIT_VALUE(112);
		Static_Var_5 = get UNKNOWN_UNIT_VALUE(113);
		Static_Var_6 = get UNKNOWN_UNIT_VALUE(114);
		Static_Var_7 = get UNKNOWN_UNIT_VALUE(115);
		Static_Var_8 = get UNKNOWN_UNIT_VALUE(116);
		sleep 2000;
	}
}

AimFromWeapon2(Func_Var_1)
{
	Func_Var_1 = 0;
}

AimWeapon2(Func_Var_1, Func_Var_2)
{
	return (Static_Var_5);
}

QueryWeapon2(Func_Var_1)
{
	Func_Var_1 = 0;
}

FireWeapon2(Func_Var_1)
{
}

AimFromWeapon3(Func_Var_1)
{
	Func_Var_1 = 0;
}

AimWeapon3(Func_Var_1, Func_Var_2)
{
	return (Static_Var_6);
}

QueryWeapon3(Func_Var_1)
{
	Func_Var_1 = 0;
}

FireWeapon3(Func_Var_1)
{
}

Create()
{
	start-script ManageONS();
	start-script TurnTowardBarycenter();
	Static_Var_1 = 0;
	turn pillar0 to y-axis <45.000000> now;
	turn pillar1 to y-axis <135.000000> now;
	turn pillar2 to y-axis <-45.000000> now;
	turn pillar3 to y-axis <-135.000000> now;
	move base0 to y-axis [-8.000000] now;
	move base1 to y-axis [-8.000000] now;
	move base2 to y-axis [-8.000000] now;
	move base3 to y-axis [-8.000000] now;
	move pillar0 to y-axis [-32.000000] now;
	move pillar1 to y-axis [-32.000000] now;
	move pillar2 to y-axis [-32.000000] now;
	move pillar3 to y-axis [-32.000000] now;
	move head0 to y-axis [-32.000000] now;
	move head1 to y-axis [-32.000000] now;
	move head2 to y-axis [-32.000000] now;
	move head3 to y-axis [-32.000000] now;
	move base0 to y-axis [0.000000] speed [12.000000];
	move base1 to y-axis [0.000000] speed [12.000000];
	move base2 to y-axis [0.000000] speed [12.000000];
	move base3 to y-axis [0.000000] speed [12.000000];
	sleep 400;
	move pillar0 to y-axis [-16.000000] speed [24.000000];
	move pillar1 to y-axis [-16.000000] speed [24.000000];
	move pillar2 to y-axis [-16.000000] speed [24.000000];
	move pillar3 to y-axis [-16.000000] speed [24.000000];
	move head0 to y-axis [-12.000000] speed [16.000000];
	move head1 to y-axis [-12.000000] speed [16.000000];
	move head2 to y-axis [-12.000000] speed [16.000000];
	move head3 to y-axis [-12.000000] speed [16.000000];
	wait-for-move pillar0 along y-axis;
	Static_Var_1 = 1;
}

StartBuilding()
{
	signal 32;
	set-signal-mask 32;
	while( TRUE )
	{
		emit-sfx 2048 from tip0;
		emit-sfx 2048 from tip1;
		emit-sfx 2048 from tip2;
		emit-sfx 2048 from tip3;
		sleep 60;
	}
}

StopBuilding()
{
	signal 32;
}

QueryBuildInfo(piecenum)
{
	piecenum = pad;
}

Activate()
{
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	while( !Static_Var_1 )
	{
		sleep 100;
	}
	set YARD_OPEN to 1;
	start-script GetPillar0Ready();
	sleep 200;
	start-script GetPillar1Ready();
	sleep 200;
	start-script GetPillar2Ready();
	sleep 200;
	start-script GetPillar3Ready();
}

Deactivate()
{
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	while( get YARD_OPEN )
	{
		set YARD_OPEN to 0;
		sleep 300;
	}
	start-script GetPillar0Rest();
	sleep 1800;
	start-script GetPillar1Rest();
	sleep 1800;
	start-script GetPillar2Rest();
	sleep 1800;
	start-script GetPillar3Rest();
}

HitByWeaponId(Func_Var_1, Func_Var_2, Func_Var_3, Func_Var_4)
{
	if( Func_Var_3 == 168 )
	{
		return (10);
	}
	return (100);
}

AimFromWeapon1(Func_Var_1)
{
	Func_Var_1 = 1;
}

QueryWeapon1(Func_Var_1)
{
	Func_Var_1 = 1;
}
