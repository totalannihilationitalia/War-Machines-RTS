// Arm Reclamation -cLONe- Script by Ninjato of sWs "skunkWorks"

piece ground,pelvis,rthigh,rleg,rfoot,lthigh,lleg,lfoot,torso,luparm,lloarm,lnano,ruparm,rloarm,rnano;

static-var buildheading,bMoving,bAiming,bCanAim,beam;

#define SMOKEPIECE1 torso
#define ANIM_VARIABLE TRUE

#include "StateChg.h"
#include "smokeunit.h"
#include "exptype.h"

walk()
	{
		IF ( TRUE )
			{
			MOVE pelvis to y-axis <-.54> NOW;
			TURN rthigh to x-axis <10.69> NOW;
			TURN lthigh to x-axis <-53.48> NOW;
			TURN torso to y-axis <5.75> NOW;
			TURN luparm to x-axis <38.67> NOW;
			TURN ruparm to x-axis <-18.09> NOW;
			TURN rloarm to x-axis <48.95> NOW;
			TURN lloarm to x-axis <48.95> NOW;
			TURN lleg to x-axis <53.48> NOW;
			TURN rleg to x-axis <53.48> NOW;
			TURN rfoot to x-axis <-37.84> NOW;
			SLEEP <90>;
			}
		IF ( TRUE )
			{
			MOVE pelvis to y-axis <-.30> NOW;
			TURN rthigh to x-axis <-10.28> NOW;
			TURN lthigh to x-axis <-41.55> NOW;
			TURN torso to y-axis <3.29> NOW;
			TURN luparm to x-axis <32.09> NOW;
			TURN ruparm to x-axis <-11.10> NOW;
			TURN rloarm to x-axis <48.95> NOW;
			TURN lloarm to x-axis <48.95> NOW;
			TURN lleg to x-axis <41.96> NOW;
			TURN rleg to x-axis <81.87> NOW;
			TURN rfoot to x-axis <-31.26> NOW;
			SLEEP <70>;
			}
		IF ( TRUE )
			{
			MOVE pelvis to y-axis <-.15> NOW;
			TURN rthigh to x-axis <-18.09> NOW;
			TURN lthigh to x-axis <-24.68> NOW;
			TURN torso to y-axis <0> NOW;
			TURN luparm to x-axis <27.15> NOW;
			TURN ruparm to x-axis <-7.40> NOW;
			TURN lleg to x-axis <24.68> NOW;
			TURN rleg to x-axis <85.57> NOW;
			TURN rfoot to x-axis <-23.03> NOW;
			SLEEP <50>;
			}
		IF ( TRUE )
			{
			MOVE pelvis to y-axis <0.0> NOW;
			TURN rthigh to x-axis <-42.37> NOW;
			TURN lthigh to x-axis <5.34> NOW;
			TURN torso to y-axis <-3.29> NOW;
			TURN luparm to x-axis <8.22> NOW;
			TURN ruparm to x-axis <9.04> NOW;
			TURN rloarm to x-axis <48.95> NOW;
			TURN lloarm to x-axis <48.95> NOW;
			TURN lleg to x-axis <6.58> NOW;
			TURN lfoot to x-axis <-9.04> NOW;
			TURN rleg to x-axis <104.50> NOW;
			TURN rfoot to x-axis <0> NOW;
			SLEEP <40>;
			}
		IF ( TRUE )
			{
			MOVE pelvis to y-axis <-.20> NOW;
			TURN rthigh to x-axis <-69.93> NOW;
			TURN lthigh to x-axis <14.80> NOW;
			TURN torso to y-axis <-6.16> NOW;
			TURN luparm to x-axis <-3.70> NOW;
			TURN ruparm to x-axis <17.68> NOW;
			TURN lleg to x-axis <15.22> NOW;
			TURN lfoot to x-axis <-25.09> NOW;
			TURN rleg to x-axis <107.38> NOW;
			SLEEP <50>;
			}
		IF ( TRUE )
			{
			MOVE pelvis to y-axis <-.40> NOW;
			TURN rthigh to x-axis <-75.28> NOW;
			TURN lthigh to x-axis <20.15> NOW;
			TURN torso to y-axis <-8.22> NOW;
			TURN luparm to x-axis <-10.28> NOW;
			TURN ruparm to x-axis <25.09> NOW;
			TURN lleg to x-axis <26.32> NOW;
			TURN lfoot to x-axis <-33.73> NOW;
			TURN rleg to x-axis <64.59> NOW;
			SLEEP <70>;
			}
		IF ( TRUE )
			{
			MOVE pelvis to y-axis <-.55> NOW;
			TURN rthigh to x-axis <-56.77> NOW;
			TURN lthigh to x-axis <24.26> NOW;
			TURN torso to y-axis <-6.16> NOW;
			TURN luparm to x-axis <-23.86> NOW;
			TURN ruparm to x-axis <31.26> NOW;
			TURN rloarm to x-axis <48.95> NOW;
			TURN lloarm to x-axis <48.95> NOW;
			TURN lleg to x-axis <38.67> NOW;
			TURN lfoot to x-axis <-38.67> NOW;
			TURN rleg to x-axis <56.77> NOW;
			SLEEP <90>;
			}
		IF ( TRUE )
			{
			MOVE pelvis to y-axis <-.30> NOW;
			TURN rthigh to x-axis <-44.84> NOW;
			TURN lthigh to x-axis <5.34> NOW;
			TURN torso to y-axis <-3.29> NOW;
			TURN luparm to x-axis <-16.04> NOW;
			TURN ruparm to x-axis <19.74> NOW;
			TURN lleg to x-axis <67.06> NOW;
			TURN rfoot to x-axis <-12.33> NOW;
			SLEEP <70>;
			}
		IF ( TRUE )
			{
			MOVE pelvis to y-axis <-.14> NOW;
			TURN rthigh to x-axis <-22.62> NOW;
			TURN lthigh to x-axis <-12.74> NOW;
			TURN torso to y-axis <0> NOW;
			TURN luparm to x-axis <-1.64> NOW;
			TURN ruparm to x-axis <10.28> NOW;
			TURN lleg to x-axis <79.40> NOW;
			TURN lfoot to x-axis <-27.97> NOW;
			TURN rleg to x-axis <37.02> NOW;
			TURN rfoot to x-axis <-15.63> NOW;
			SLEEP <50>;
			}
		IF ( TRUE )
			{
			MOVE pelvis to y-axis <0.0> NOW;
			TURN rthigh to x-axis <2.87> NOW;
			TURN lthigh to x-axis <-42.37> NOW;
			TURN torso to y-axis <3.29> NOW;
			TURN luparm to x-axis <11.51> NOW;
			TURN ruparm to x-axis <1.23> NOW;
			TURN rloarm to x-axis <48.95> NOW;
			TURN lloarm to x-axis <48.95> NOW;
			TURN lleg to x-axis <90.09> NOW;
			TURN lfoot to x-axis <-15.22> NOW;
			TURN rleg to x-axis <6.58> NOW;
			TURN rfoot to x-axis <-9.45> NOW;
			SLEEP <40>;
			}
		IF ( TRUE )
			{
			MOVE pelvis to y-axis <-.19> NOW;
			TURN rthigh to x-axis <13.16> NOW;
			TURN lthigh to x-axis <-57.18> NOW;
			TURN torso to y-axis <6.16> NOW;
			TURN luparm to x-axis <21.39> NOW;
			TURN ruparm to x-axis <-6.99> NOW;
			TURN rfoot to x-axis <-19.33> NOW;
			SLEEP <50>;
			}
		MOVE pelvis to y-axis <-.40> NOW;
		TURN rthigh to x-axis <16.45> NOW;
		TURN lthigh to x-axis <-67.06> NOW;
		TURN torso to y-axis <8.22> NOW;
		TURN luparm to x-axis <25.09> NOW;
		TURN ruparm to x-axis <-12.33> NOW;
		TURN lleg to x-axis <55.54> NOW;
		TURN lfoot to x-axis <-2.87> NOW;
		TURN rleg to x-axis <24.68> NOW;
		TURN rfoot to x-axis <-33.32> NOW;
		SLEEP <70>;
	}
walklegs()
	{
		IF ( TRUE )
			{
			MOVE pelvis to y-axis <-.54> NOW;
			TURN rthigh to x-axis <10.69> NOW;
			TURN lthigh to x-axis <-53.48> NOW;
			TURN lleg to x-axis <53.48> NOW;
			TURN rleg to x-axis <53.48> NOW;
			TURN rfoot to x-axis <-37.84> NOW;
			SLEEP <90>;
			}
		IF ( TRUE )
			{
			MOVE pelvis to y-axis <-.30> NOW;
			TURN rthigh to x-axis <-10.28> NOW;
			TURN lthigh to x-axis <-41.55> NOW;
			TURN lleg to x-axis <41.96> NOW;
			TURN rleg to x-axis <81.87> NOW;
			TURN rfoot to x-axis <-31.26> NOW;
			SLEEP <70>;
			}
		IF ( TRUE )
			{
			MOVE pelvis to y-axis <-.15> NOW;
			TURN rthigh to x-axis <-18.09> NOW;
			TURN lthigh to x-axis <-24.68> NOW;
			TURN lleg to x-axis <24.68> NOW;
			TURN rleg to x-axis <85.57> NOW;
			TURN rfoot to x-axis <-23.03> NOW;
			SLEEP <50>;
			}
		IF ( TRUE )
			{
			MOVE pelvis to y-axis <0.0> NOW;
			TURN rthigh to x-axis <-42.37> NOW;
			TURN lthigh to x-axis <5.34> NOW;
			TURN lleg to x-axis <6.58> NOW;
			TURN lfoot to x-axis <-9.04> NOW;
			TURN rleg to x-axis <104.50> NOW;
			TURN rfoot to x-axis <0> NOW;
			SLEEP <40>;
			}
		IF ( TRUE )
			{
			MOVE pelvis to y-axis <-.20> NOW;
			TURN rthigh to x-axis <-69.93> NOW;
			TURN lthigh to x-axis <14.80> NOW;
			TURN lleg to x-axis <15.22> NOW;
			TURN lfoot to x-axis <-25.09> NOW;
			TURN rleg to x-axis <107.38> NOW;
			SLEEP <50>;
			}
		IF ( TRUE )
			{
			MOVE pelvis to y-axis <-.40> NOW;
			TURN rthigh to x-axis <-75.28> NOW;
			TURN lthigh to x-axis <20.15> NOW;
			TURN lleg to x-axis <26.32> NOW;
			TURN lfoot to x-axis <-33.73> NOW;
			TURN rleg to x-axis <64.59> NOW;
			SLEEP <70>;
			}
		IF ( TRUE )
			{
			MOVE pelvis to y-axis <-.55> NOW;
			TURN rthigh to x-axis <-56.77> NOW;
			TURN lthigh to x-axis <24.26> NOW;
			TURN lleg to x-axis <38.67> NOW;
			TURN lfoot to x-axis <-38.67> NOW;
			TURN rleg to x-axis <56.77> NOW;
			SLEEP <90>;
			}
		IF ( TRUE )
			{
			MOVE pelvis to y-axis <-.30> NOW;
			TURN rthigh to x-axis <-44.84> NOW;
			TURN lthigh to x-axis <5.34> NOW;
			TURN lleg to x-axis <67.06> NOW;
			TURN rfoot to x-axis <-12.33> NOW;
			SLEEP <70>;
			}
		IF ( TRUE )
			{
			MOVE pelvis to y-axis <-.14> NOW;
			TURN rthigh to x-axis <-22.62> NOW;
			TURN lthigh to x-axis <-12.74> NOW;
			TURN lleg to x-axis <79.40> NOW;
			TURN lfoot to x-axis <-27.97> NOW;
			TURN rleg to x-axis <37.02> NOW;
			TURN rfoot to x-axis <-15.63> NOW;
			SLEEP <50>;
			}
		IF ( TRUE )
			{
			MOVE pelvis to y-axis <0.0> NOW;
			TURN rthigh to x-axis <2.87> NOW;
			TURN lthigh to x-axis <-42.37> NOW;
			TURN lleg to x-axis <90.09> NOW;
			TURN lfoot to x-axis <-15.22> NOW;
			TURN rleg to x-axis <6.58> NOW;
			TURN rfoot to x-axis <-9.45> NOW;
			SLEEP <40>;
			}
		IF ( TRUE )
			{
			MOVE pelvis to y-axis <-.19> NOW;
			TURN rthigh to x-axis <13.16> NOW;
			TURN lthigh to x-axis <-57.18> NOW;
			TURN rfoot to x-axis <-19.33> NOW;
			SLEEP <50>;
			}
		MOVE pelvis to y-axis <-.40> NOW;
		TURN rthigh to x-axis <16.45> NOW;
		TURN lthigh to x-axis <-67.06> NOW;
		TURN lleg to x-axis <55.54> NOW;
		TURN lfoot to x-axis <-2.87> NOW;
		TURN rleg to x-axis <24.68> NOW;
		TURN rfoot to x-axis <-33.32> NOW;
		SLEEP <70>;
	}

stand()
	{
		TURN pelvis to x-axis <0> SPEED <100>;
		TURN rthigh to x-axis <0> SPEED <200.0>;
		TURN rleg to x-axis <0> SPEED <200.0>;
		TURN rfoot to x-axis <0> SPEED <200.0>;
		TURN lthigh to x-axis <0> SPEED <200.0>;
		TURN lleg to x-axis <0> SPEED <200.0>;
		TURN lfoot to x-axis <0> SPEED <200.0>;
		SLEEP <23>;
	}

open()
	{
		IF ( TRUE )
			{
		turn lnano to x-axis <0> SPEED NOW;
		turn rnano to x-axis <0> SPEED NOW;
			}
		SLEEP <500>;
	}

close()
	{
		IF ( TRUE )
			{
		turn lloarm to x-axis <80> speed <45>;
		turn rloarm to x-axis <80> speed <45>;
			}
		SLEEP <500>;
	}

MotionControl(moving,aiming)
	{
		WHILE ( TRUE )
			{
			moving = bMoving ;
			aiming = bAiming ;
			IF (moving )
				{
				IF (aiming )
					{
					bCanAim = TRUE;
					CALL-SCRIPT walklegs();
					}
				IF (!aiming )
					{
					bCanAim = FALSE;
					CALL-SCRIPT walk();
					}
				}
			IF (!moving )
				{
				bCanAim = TRUE;
				CALL-SCRIPT stand();
				}
			}
	}

Go()
	{
	bAiming = TRUE;
	dont-cache lnano;
	dont-cache rnano;
	CALL-SCRIPT open();
	turn torso to y-axis buildheading speed <150>;
	turn luparm to x-axis <0> speed <200>;
	turn lloarm to x-axis <0> speed <200>;
	turn ruparm to x-axis <0> speed <200>;
	turn rloarm to x-axis <0> speed <200>;
	wait-for-turn torso around y-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn lloarm around x-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn rloarm around x-axis;
	set INBUILDSTANCE to TRUE;
	}

Stop()
	{
	set INBUILDSTANCE to FALSE;
	cache lnano;
	cache rnano;
	turn torso to y-axis <0> speed <90>;
	wait-for-turn torso around y-axis;
	CALL-SCRIPT close();
	bAiming = FALSE;
	}

#DEFINE ACTIVATECMD CALL-SCRIPT Go();
#DEFINE DEACTIVATECMD CALL-SCRIPT Stop();
#INCLUDE "StateChg.h"

Create()
	{
	hide lnano;
	hide rnano;
	turn luparm to x-axis <0> speed NOW;
	turn lloarm to x-axis <60> speed NOW;
	turn lnano to x-axis <0> SPEED NOW;
	turn ruparm to x-axis <0> speed NOW;
	turn rloarm to x-axis <60> speed NOW;
	turn rnano to x-axis <0> SPEED NOW;
	cache nanl;
	cache nanr;
	dont-shade lnano;
	dont-shade rnano;
	beam = 0;
	buildheading = 0;
	bMoving = FALSE;
	bAiming = FALSE;
	bCanAim = TRUE;
	CALL-SCRIPT InitState();
	start-script SmokeUnit();
	START-SCRIPT MotionControl();
	}

Activate()
	{
	START-SCRIPT RequestState( ACTIVE );
	}

Deactivate()
	{
	START-SCRIPT RequestState( INACTIVE );
	}

StartBuilding(heading)
	{
	buildheading = heading;
	START-SCRIPT RequestState( ACTIVE );
	}

StopBuilding()
	{
	START-SCRIPT RequestState( INACTIVE );
	}

StartMoving()
	{
	bMoving = TRUE;
	}

StopMoving()
	{
	bMoving = FALSE;
	}

SweetSpot(piecenum)
	{
	piecenum=torso;
	}

QueryNanoPiece(piecenum)
	{
	if( beam == 0 )
		{
		piecenum=lnano;
		}
	if( beam != 0 )
		{
		piecenum=rnano;
		}
	beam = !beam;
	}

TargetHeading( heading )
	{
	buildheading = 0 - heading;
	}

Killed( severity, corpsetype )
	{
	hide lnano;
	hide rnano;
	if (severity <= 25)
		{
		corpsetype = 1;
		explode pelvis type	BITMAPONLY | BITMAP1;
		explode rthigh type	BITMAPONLY | BITMAP2;
		explode rleg type	BITMAPONLY | BITMAP3;
		explode rfoot type	BITMAPONLY | BITMAP4;
		explode lthigh type	BITMAPONLY | BITMAP5;
		explode lleg type	BITMAPONLY | BITMAP1;
		explode lfoot type	BITMAPONLY | BITMAP2;
		explode torso type	BITMAPONLY | BITMAP3;
		explode luparm type	BITMAPONLY | BITMAP4;
		explode lloarm type	BITMAPONLY | BITMAP5;
		explode lnano type	BITMAPONLY | BITMAP1;
		explode ruparm type	BITMAPONLY | BITMAP2;
		explode rloarm type	BITMAPONLY | BITMAP3;
		explode rnano type	BITMAPONLY | BITMAP4;
		return( 0 );
		}

	if (severity <= 50)
		{
		corpsetype = 2;
		explode pelvis type	FALL | BITMAP1;
		explode rthigh type	FALL | BITMAP2;
		explode rleg type	FALL | BITMAP3;
		explode rfoot type	FALL | BITMAP4;
		explode lthigh type	FALL | BITMAP5;
		explode lleg type	FALL | BITMAP1;
		explode lfoot type	FALL | BITMAP2;
		explode torso type	SHATTER | BITMAP3;
		explode luparm type	FALL | BITMAP4;
		explode lloarm type	FALL | BITMAP5;
		explode lnano type	FALL | BITMAP1;
		explode ruparm type	FALL | BITMAP2;
		explode rloarm type	FALL | BITMAP3;
		explode rnano type	FALL | BITMAP4;
		return( 0 );
		}

	if (severity <= 99)
		{
		corpsetype = 3;
		explode pelvis type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rthigh type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rleg type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rfoot type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lthigh type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lleg type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lfoot type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode torso type	SHATTER | BITMAP3;
		explode luparm type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lloarm type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lnano type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode ruparm type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rloarm type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rnano type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		return( 0 );
		}

	corpsetype = 3;
	explode pelvis type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rthigh type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rleg type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rfoot type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lthigh type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lleg type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lfoot type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode torso type	SHATTER | EXPLODE_ON_HIT | BITMAP3;
	explode luparm type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lloarm type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lnano type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode ruparm type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rloarm type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rnano type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	}
