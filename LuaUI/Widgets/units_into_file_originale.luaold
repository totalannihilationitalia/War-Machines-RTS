function widget:GetInfo()
	return {
		name      = "units into file",
		desc      = "click in f11 to do",
		author    = "knorke",
		date      = "a horse up is a horse indeed",
		license   = "yes",
		layer     = 0,
		enabled   = false
	}
end

local fn = "units.txt"
local rots = {
[32767]	= "north",
[-16384] = "west",
[0] = "south",
[16384]	= "east",
}

function widget:Initialize()
	Spring.Echo (widget.GetInfo().name .. " - start")
	local f = io.open(fn, "w+")
	local toSave = {}
	for _,uid in ipairs(Spring.GetAllUnits()) do
		Spring.Echo (uid)		
		local x,y,z = Spring.GetUnitPosition(uid)
		local udid = Spring.GetUnitDefID(uid)
		local rot = Spring.GetUnitHeading(uid)
		Spring.Echo (UnitDefs[udid].isImmobile)
		toSave=
		{name = UnitDefs[udid].name,
		--x=x,
		--y=y,
		--z=z,
		x=math.floor(x),
		y=math.floor(y),
		z=math.floor(z),
		rot=(not UnitDefs[udid].isImmobile and rot or rots[rot]),
		unitID = uid,
		unitStates = Spring.GetUnitStates(uid),
		unitCmds = Spring.GetUnitCommands (uid)
		}
	--f:write ("{" ..table.tostring (toSave)..", unitStates={"..table.tostring(Spring.GetUnitStates(uid)).. "}}\n")
	Spring.Echo (table.tostring (toSave) .."\n")
	f:write (table.tostring (toSave) ..",\n")
	end	
	f:close()
	Spring.Echo (widget.GetInfo().name .. " - done")
	widgetHandler:RemoveWidget()
end

--table functions from http://lua-users.org/wiki/TableUtils
function table.val_to_str ( v )
  if "string" == type( v ) then
    v = string.gsub( v, "\n", "\\n" )
    if string.match( string.gsub(v,"[^'\"]",""), '^"+$' ) then
      return "'" .. v .. "'"
    end
    return '"' .. string.gsub(v,'"', '\\"' ) .. '"'
  else
    return "table" == type( v ) and table.tostring( v ) or
      tostring( v )
  end
end

function table.key_to_str ( k )
  if "string" == type( k ) and string.match( k, "^[_%a][_%a%d]*$" ) then
    return k
  else
    return "[" .. table.val_to_str( k ) .. "]"
  end
end

function table.tostring( tbl )
  local result, done = {}, {}
  for k, v in ipairs( tbl ) do
    table.insert( result, table.val_to_str( v ) )
    done[ k ] = true
  end
  for k, v in pairs( tbl ) do
    if not done[ k ] then
      table.insert( result,
        table.key_to_str( k ) .. "=" .. table.val_to_str( v ) )
    end
  end
  return "{" .. table.concat( result, "," ) .. "}"
  --return table.concat( result, "," )
end